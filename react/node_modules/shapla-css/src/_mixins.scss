@import "variables";
@import "colors";

@mixin media( $res ) {
  @if mobile == $res or sm == $res {
    @media screen and (max-width: ($screen-sm)) {
      @content;
    }
  }
  @if tablet == $res or md == $res {
    @media print, screen and (min-width: $screen-md) {
      @content;
    }
  }
  @if desktop == $res or lg == $res {
    @media screen and (min-width: $screen-lg) {
      @content;
    }
  }

  @if wide == $res or xl == $res {
    @media screen and (min-width: $screen-xl) {
      @content;
    }
  }

  @if $screen-xxl-enabled {
    @if fullhd == $res or xxl == $res {
      @media screen and (min-width: $screen-xxl) {
        @content;
      }
    }
  }
}

@mixin responsiveContent($className) {
  @each $breakpoint in (sm, md, lg, xl, xxl) {
    @include media($breakpoint) {
      .#{$breakpoint}\:#{$className} {
        @content;
      }
    }
  }
}

@mixin shadow-1dp() {
  box-shadow: 0 1px 1px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 2px 1px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 3px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}

@mixin shadow-2dp() {
  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 1px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 5px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}

@mixin shadow-3dp() {
  box-shadow: 0 3px 4px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 3px -2px rgba(0, 0, 0, $shadow-key-umbra-opacity),
  0 1px 8px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity);
}

@mixin shadow-4dp() {
  box-shadow: 0 4px 5px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 1px 10px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 2px 4px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-6dp() {
  box-shadow: 0 6px 10px 0 rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 1px 18px 0 rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 3px 5px -1px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-8dp() {
  box-shadow: 0 8px 10px 1px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 3px 14px 2px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 5px 5px -3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-16dp() {
  box-shadow: 0 16px 24px 2px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 6px 30px 5px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 8px 10px -5px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin shadow-24dp() {
  box-shadow: 0 9px 46px 8px rgba(0, 0, 0, $shadow-key-penumbra-opacity),
  0 11px 15px -7px rgba(0, 0, 0, $shadow-ambient-shadow-opacity),
  0 24px 38px 3px rgba(0, 0, 0, $shadow-key-umbra-opacity);
}

@mixin css-var-colors( $selector : ':root' ) {
  #{$selector} {
    --shapla-primary: #{$color--primary};
    --shapla-on-primary: #{$color--on-primary};
    --shapla-primary-variant: #{$color--primary-variant};
    --shapla-primary-alpha: #{$color--primary-alpha};
    --shapla-secondary: #{$color--secondary};
    --shapla-on-secondary: #{$color--on-secondary};
    --shapla-secondary-variant: #{$color--secondary-variant};
    --shapla-secondary-alpha: #{$color--secondary-alpha};
    --shapla-success: #{$color--success};
    --shapla-on-success: #{$color--on-success};
    --shapla-success-variant: #{$color--success-variant};
    --shapla-success-alpha: #{$color--success-alpha};
    --shapla-error: #{$color--error};
    --shapla-on-error: #{$color--on-error};
    --shapla-error-variant: #{$color--error-variant};
    --shapla-error-alpha: #{$color--error-alpha};
    --shapla-warning: #{$color--warning};
    --shapla-on-warning: #{$color--on-warning};
    --shapla-warning-variant: #{$color--warning-variant};
    --shapla-warning-alpha: #{$color--warning-alpha};
    --shapla-surface: #{$color--surface};
    --shapla-on-surface: #{$color--on-surface};
    --shapla-background: #{$color--background};
    --shapla-text-primary: #{$color--text-primary};
    --shapla-text-secondary: #{$color--text-secondary};
    --shapla-text-hint: #{$color--text-hint};
    --shapla-text-disabled: #{$color--text-disabled};
    --shapla-text-icon: #{$color--text-icon};
  }
}

@mixin control {
  appearance: none;
  align-items: center;
  border: $control-border-width solid transparent;
  border-radius: $control-radius;
  box-shadow: none;
  display: inline-flex;
  font-size: 1rem;
  height: $control-height;
  justify-content: flex-start;
  line-height: $control-line-height;
  padding: $control-padding-vertical $control-padding-horizontal;
  position: relative;
  vertical-align: top;
  // States
  &:focus, &.is-focused, &:active, &.is-active {
    outline: none;
  }

  &[disabled], fieldset[disabled] & {
    cursor: not-allowed
  }
}
