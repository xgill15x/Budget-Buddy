{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _core = require(\"@babel/core\");\n\nconst PURE_CALLS = new Map([[\"react\", [\"cloneElement\", \"createContext\", \"createElement\", \"createFactory\", \"createRef\", \"forwardRef\", \"isValidElement\", \"memo\", \"lazy\"]], [\"react-dom\", [\"createPortal\"]]]);\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-react-pure-annotations\",\n    visitor: {\n      CallExpression(path) {\n        if (isReactCall(path)) {\n          (0, _helperAnnotateAsPure.default)(path);\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;\n\nfunction isReactCall(path) {\n  if (!_core.types.isMemberExpression(path.node.callee)) {\n    const callee = path.get(\"callee\");\n\n    for (const [module, methods] of PURE_CALLS) {\n      for (const method of methods) {\n        if (callee.referencesImport(module, method)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  for (const [module, methods] of PURE_CALLS) {\n    const object = path.get(\"callee.object\");\n\n    if (object.referencesImport(module, \"default\") || object.referencesImport(module, \"*\")) {\n      for (const method of methods) {\n        if (_core.types.isIdentifier(path.node.callee.property, {\n          name: method\n        })) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/node_modules/@babel/plugin-transform-react-pure-annotations/lib/index.js"],"names":["Object","defineProperty","exports","value","default","_helperPluginUtils","require","_helperAnnotateAsPure","_core","PURE_CALLS","Map","_default","declare","api","assertVersion","name","visitor","CallExpression","path","isReactCall","types","isMemberExpression","node","callee","get","module","methods","method","referencesImport","object","isIdentifier","property"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGC,OAAO,CAAC,4BAAD,CAAhC;;AAEA,IAAIC,qBAAqB,GAAGD,OAAO,CAAC,gCAAD,CAAnC;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,aAAD,CAAnB;;AAEA,MAAMG,UAAU,GAAG,IAAIC,GAAJ,CAAQ,CAAC,CAAC,OAAD,EAAU,CAAC,cAAD,EAAiB,eAAjB,EAAkC,eAAlC,EAAmD,eAAnD,EAAoE,WAApE,EAAiF,YAAjF,EAA+F,gBAA/F,EAAiH,MAAjH,EAAyH,MAAzH,CAAV,CAAD,EAA8I,CAAC,WAAD,EAAc,CAAC,cAAD,CAAd,CAA9I,CAAR,CAAnB;;AAEA,IAAIC,QAAQ,GAAG,CAAC,GAAGN,kBAAkB,CAACO,OAAvB,EAAgCC,GAAG,IAAI;AACpDA,EAAAA,GAAG,CAACC,aAAJ,CAAkB,CAAlB;AACA,SAAO;AACLC,IAAAA,IAAI,EAAE,kCADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,cAAc,CAACC,IAAD,EAAO;AACnB,YAAIC,WAAW,CAACD,IAAD,CAAf,EAAuB;AACrB,WAAC,GAAGX,qBAAqB,CAACH,OAA1B,EAAmCc,IAAnC;AACD;AACF;;AALM;AAFJ,GAAP;AAWD,CAbc,CAAf;;AAeAhB,OAAO,CAACE,OAAR,GAAkBO,QAAlB;;AAEA,SAASQ,WAAT,CAAqBD,IAArB,EAA2B;AACzB,MAAI,CAACV,KAAK,CAACY,KAAN,CAAYC,kBAAZ,CAA+BH,IAAI,CAACI,IAAL,CAAUC,MAAzC,CAAL,EAAuD;AACrD,UAAMA,MAAM,GAAGL,IAAI,CAACM,GAAL,CAAS,QAAT,CAAf;;AAEA,SAAK,MAAM,CAACC,MAAD,EAASC,OAAT,CAAX,IAAgCjB,UAAhC,EAA4C;AAC1C,WAAK,MAAMkB,MAAX,IAAqBD,OAArB,EAA8B;AAC5B,YAAIH,MAAM,CAACK,gBAAP,CAAwBH,MAAxB,EAAgCE,MAAhC,CAAJ,EAA6C;AAC3C,iBAAO,IAAP;AACD;AACF;AACF;;AAED,WAAO,KAAP;AACD;;AAED,OAAK,MAAM,CAACF,MAAD,EAASC,OAAT,CAAX,IAAgCjB,UAAhC,EAA4C;AAC1C,UAAMoB,MAAM,GAAGX,IAAI,CAACM,GAAL,CAAS,eAAT,CAAf;;AAEA,QAAIK,MAAM,CAACD,gBAAP,CAAwBH,MAAxB,EAAgC,SAAhC,KAA8CI,MAAM,CAACD,gBAAP,CAAwBH,MAAxB,EAAgC,GAAhC,CAAlD,EAAwF;AACtF,WAAK,MAAME,MAAX,IAAqBD,OAArB,EAA8B;AAC5B,YAAIlB,KAAK,CAACY,KAAN,CAAYU,YAAZ,CAAyBZ,IAAI,CAACI,IAAL,CAAUC,MAAV,CAAiBQ,QAA1C,EAAoD;AACtDhB,UAAAA,IAAI,EAAEY;AADgD,SAApD,CAAJ,EAEI;AACF,iBAAO,IAAP;AACD;AACF;;AAED,aAAO,KAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _helperPluginUtils = require(\"@babel/helper-plugin-utils\");\n\nvar _helperAnnotateAsPure = require(\"@babel/helper-annotate-as-pure\");\n\nvar _core = require(\"@babel/core\");\n\nconst PURE_CALLS = new Map([[\"react\", [\"cloneElement\", \"createContext\", \"createElement\", \"createFactory\", \"createRef\", \"forwardRef\", \"isValidElement\", \"memo\", \"lazy\"]], [\"react-dom\", [\"createPortal\"]]]);\n\nvar _default = (0, _helperPluginUtils.declare)(api => {\n  api.assertVersion(7);\n  return {\n    name: \"transform-react-pure-annotations\",\n    visitor: {\n      CallExpression(path) {\n        if (isReactCall(path)) {\n          (0, _helperAnnotateAsPure.default)(path);\n        }\n      }\n\n    }\n  };\n});\n\nexports.default = _default;\n\nfunction isReactCall(path) {\n  if (!_core.types.isMemberExpression(path.node.callee)) {\n    const callee = path.get(\"callee\");\n\n    for (const [module, methods] of PURE_CALLS) {\n      for (const method of methods) {\n        if (callee.referencesImport(module, method)) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  for (const [module, methods] of PURE_CALLS) {\n    const object = path.get(\"callee.object\");\n\n    if (object.referencesImport(module, \"default\") || object.referencesImport(module, \"*\")) {\n      for (const method of methods) {\n        if (_core.types.isIdentifier(path.node.callee.property, {\n          name: method\n        })) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}