{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\desktop\\\\BudgetTracker\\\\react\\\\src\\\\Register.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport { faWindowRestore } from '@fortawesome/free-solid-svg-icons'; //import 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Register extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitUser = e => {\n      e.preventDefault();\n      let isUsernameTaken = false;\n      this.state.users.map(user => {\n        if (e.target[0].value === user.username) {\n          isUsernameTaken = true;\n        }\n      });\n\n      if (isUsernameTaken === false) {\n        if (e.target[1].value === e.target[2].value) {\n          axios.post(\"http://localhost:8080/user/addRow\", {\n            username: e.target[0].value,\n            password: e.target[1].value\n          }).then(response => {\n            console.log(\"status: \", \"user created\");\n            console.log(\"Response:\", response);\n            const newUser = {\n              id: response.data,\n              username: e.target[0].value,\n              password: e.target[1].value\n            };\n            this.setState({\n              users: [...this.state.users, newUser]\n            }, function () {\n              // console.log(\"username\", newUser.username);\n              // console.log(\"pass\", newUser.password);\n              // console.log(\"usersList\",this.state.users);\n              e.target[0].value = '';\n              e.target[1].value = '';\n              e.target[2].value = '';\n            });\n          }).catch(error => {\n            console.log(error);\n          });\n          window.alert(\"User has been created!\");\n        } else {\n          e.target[0].value = '';\n          e.target[1].value = '';\n          e.target[2].value = '';\n          window.alert(\"Passwords do not match.Try again.\");\n        }\n      } else {\n        window.alert(\"Username is taken. Try another.\");\n        e.target[0].value = '';\n        e.target[1].value = '';\n        e.target[2].value = '';\n      }\n    };\n\n    this.state = {\n      users: [],\n      showLogin: false,\n      showRegister: true\n    };\n    this.submitUser = this.submitUser.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.changeLoginState = this.changeLoginState.bind(this);\n    this.renderRegister = this.renderRegister.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/user/allUsers\").then(res => {\n      this.setState({\n        users: res.data\n      }, function () {\n        console.log(this.state.users);\n      });\n    });\n  }\n\n  changeLoginState() {\n    this.setState({\n      showLogin: true,\n      showRegister: false\n    });\n  }\n\n  renderLogin() {}\n\n  renderRegister() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"registerBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mainTitle\",\n          id: \"formText\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.submitUser,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black\",\n            children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"registerInput\",\n                required: true,\n                type: \"text\",\n                name: \"expense\",\n                placeholder: \"Username_99\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black\",\n            children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              placeholder: \"Password123\",\n              required: true,\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"black\",\n            children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"confirmPassword\",\n              placeholder: \"Password123\",\n              required: true,\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"buttons-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"buttons-invariant\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                this.changeLoginState();\n              },\n              className: \"buttons-invariant\",\n              children: \"to Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.showRegister && this.renderRegister(), this.showLogin && this.renderLogin()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/src/Register.js"],"names":["React","useState","axios","Button","faWindowRestore","Register","Component","constructor","props","submitUser","e","preventDefault","isUsernameTaken","state","users","map","user","target","value","username","post","password","then","response","console","log","newUser","id","data","setState","catch","error","window","alert","showLogin","showRegister","bind","renderLogin","changeLoginState","renderRegister","componentDidMount","get","res","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { faWindowRestore } from '@fortawesome/free-solid-svg-icons';\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            showLogin: false,\r\n            showRegister: true\r\n        }\r\n\r\n        this.submitUser = this.submitUser.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.changeLoginState = this.changeLoginState.bind(this);\r\n        this.renderRegister = this.renderRegister.bind(this);\r\n    }\r\n\r\n    submitUser = e => {\r\n        e.preventDefault();\r\n\r\n        let isUsernameTaken = false;\r\n        this.state.users.map(user => {\r\n            if (e.target[0].value === user.username) {\r\n                isUsernameTaken = true;\r\n            }\r\n        })\r\n        \r\n        if (isUsernameTaken === false) {\r\n            if (e.target[1].value === e.target[2].value) {\r\n                axios.post(\"http://localhost:8080/user/addRow\",{\r\n                    username: e.target[0].value,\r\n                    password: e.target[1].value\r\n                }).then(response => {\r\n                    console.log(\"status: \", \"user created\")\r\n                    console.log(\"Response:\", response)\r\n                    const  newUser = {\r\n                        id: response.data,\r\n                        username: e.target[0].value,\r\n                        password: e.target[1].value\r\n                    }\r\n\r\n                    this.setState({ users: [...this.state.users, newUser] }, function() {\r\n                        // console.log(\"username\", newUser.username);\r\n                        // console.log(\"pass\", newUser.password);\r\n                        // console.log(\"usersList\",this.state.users);\r\n                        e.target[0].value = '';\r\n                        e.target[1].value = '';\r\n                        e.target[2].value = '';\r\n                    })\r\n                    \r\n                }).catch(error => {\r\n                    console.log(error)\r\n                }) \r\n                \r\n                window.alert(\"User has been created!\") \r\n            }\r\n            else {\r\n                e.target[0].value = '';\r\n                e.target[1].value = '';\r\n                e.target[2].value = '';\r\n                \r\n                window.alert(\"Passwords do not match.Try again.\")\r\n            }\r\n        }\r\n        else {\r\n            window.alert(\"Username is taken. Try another.\")\r\n            e.target[0].value = '';\r\n            e.target[1].value = '';\r\n            e.target[2].value = '';\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/user/allUsers\")\r\n        .then(res => {\r\n            this.setState({users: res.data}, function() {\r\n                console.log(this.state.users);\r\n            })\r\n            \r\n        })\r\n    }\r\n\r\n    changeLoginState() {\r\n        this.setState({showLogin: true, showRegister: false})\r\n    }\r\n    renderLogin() {\r\n        \r\n    }\r\n\r\n    renderRegister() {\r\n        return (<>\r\n            <div id=\"registerBox\">\r\n                    <h1 className=\"mainTitle\" id='formText'>Register</h1>\r\n                    <form onSubmit={this.submitUser}>\r\n                        <label className=\"black\">Username: \r\n                        <div>\r\n                            <input id=\"registerInput\" required type=\"text\" name=\"expense\"  placeholder=\"Username_99\" />\r\n                        </div>\r\n                        </label>\r\n                        <label className=\"black\">Password:  \r\n                            <input name=\"password\" placeholder=\"Password123\" required type=\"password\"/>\r\n                        </label>\r\n                        <label className=\"black\">Confirm Password:  \r\n                            <input name=\"confirmPassword\" placeholder=\"Password123\" required type=\"password\" />\r\n                        </label>\r\n                        <div className=\"buttons-flex\">\r\n                            <button type=\"submit\" className=\"buttons-invariant\">Submit</button>\r\n                            <button type=\"button\" onClick={() => {this.changeLoginState()}}className=\"buttons-invariant\">to Login</button>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                    \r\n                </div>\r\n        </>)\r\n    }\r\n\r\n    render() {\r\n        return(<>\r\n            <div>\r\n                {this.showRegister && this.renderRegister()}\r\n                {this.showLogin && this.renderLogin()}\r\n            </div>\r\n        </>)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}