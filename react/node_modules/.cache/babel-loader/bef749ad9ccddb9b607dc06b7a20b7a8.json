{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\desktop\\\\BudgetTracker\\\\react\\\\src\\\\Transactions.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Link } from \"react-router-dom\";\nimport { ThemeProvider } from 'react-bootstrap';\nimport Home from './Home';\nimport { createBrowserHistory } from \"history\";\nimport Login from './Login';\nimport { Trash } from 'react-bootstrap-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTransactions: [],\n      //selected trans\n      allTransactions: [],\n      //all transactions\n      allTransactionsForSelectedDate: [],\n      expenses: [],\n      listOfMonths: [{\n        month: \"January\",\n        monthNum: 1\n      }, {\n        month: \"February\",\n        monthNum: 2\n      }, {\n        month: \"March\",\n        monthNum: 3\n      }, {\n        month: \"April\",\n        monthNum: 4\n      }, {\n        month: \"May\",\n        monthNum: 5\n      }, {\n        month: \"June\",\n        monthNum: 6\n      }, {\n        month: \"July\",\n        monthNum: 7\n      }, {\n        month: \"August\",\n        monthNum: 8\n      }, {\n        month: \"September\",\n        monthNum: 9\n      }, {\n        month: \"October\",\n        monthNum: 10\n      }, {\n        month: \"November\",\n        monthNum: 11\n      }, {\n        month: \"December\",\n        monthNum: 12\n      }],\n      selectedMonth: -1,\n      selectedYear: -1,\n      today: new Date(),\n      showTransactions: true,\n      showHome: false,\n      showLogin: false\n    };\n    this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\n    this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.renderTableData = this.renderTableData.bind(this);\n    this.renderTransactions = this.renderTransactions.bind(this);\n    this.renderHome = this.renderHome.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.changeLoginSetState = this.changeLoginSetState.bind(this);\n  }\n\n  handleSelectedMonthDropDownChange(e) {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    let selectedElement = 0; //console.log(e.target.value)\n\n    if (e.target.value === \"-1\") {\n      console.log(\"No month selected.\");\n      return;\n    } else {\n      {\n        this.state.listOfMonths.map(element => {\n          if (element.monthNum === parseInt(e.target.value)) {\n            selectedElement = element.monthNum;\n          }\n        });\n      }\n      this.setState({\n        selectedMonth: selectedElement\n      }, function () {\n        axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n          console.log(res.data);\n          let userTransactions = res.data.filter(transaction => {\n            if (transaction.userName === username) {\n              return transaction;\n            }\n          });\n          let updatedMap = new Map(this.state.spentValsForAllExpenses);\n          this.state.expenses.map(expense => {\n            updatedMap.set(expense.id, 0.0);\n          });\n          this.setState({\n            selectedTransactions: userTransactions,\n            spentValsForAllExpenses: userTransactions\n          }, function () {\n            let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\n            this.state.selectedTransactions.map(transaction => {\n              const expenseSpentVal = changingSpentMap.get(transaction.expenseID);\n              changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\n            });\n            this.setState({\n              spentValsForAllExpenses: changingSpentMap\n            });\n          });\n        });\n      });\n    }\n  }\n\n  handleSelectedYearDropDownChange(e) {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    let selectedElement = 0; //console.log(e.target.value)\n\n    if (e.target.value === \"-1\") {\n      console.log(\"No Year selected.\");\n      return;\n    } else {\n      selectedElement = e.target.value;\n      this.setState({\n        selectedYear: selectedElement\n      }, function () {\n        axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n          // console.log(\"newTransactionDate(YearChange): \" ,res.data);\n          // this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data}, function() {\n          // });\n          console.log(res.data);\n          let userTransactions = res.data.filter(transaction => {\n            if (transaction.userName === username) {\n              return transaction;\n            }\n          });\n          console.log(\"users transactions\", userTransactions);\n          this.setState({\n            selectedTransactions: userTransactions,\n            allTransactionsForSelectedDate: userTransactions\n          }, function () {\n            console.log(this.state.selectedTransactions);\n          });\n        });\n      });\n    }\n  }\n\n  handleSortByChange(e) {\n    console.log(\"e.target.val\", e.target.value);\n    let selectionVal = -1; //temp var\n\n    this.state.expenses.map(element => {\n      if (element.id === parseInt(e.target.value)) {\n        selectionVal = parseInt(element.id);\n        console.log(\"myselectionVal: \", selectionVal);\n      }\n    });\n\n    if (selectionVal === -1) {\n      this.setState({\n        selectedTransactions: this.state.allTransactionsForSelectedDate\n      });\n    } else {\n      const updatedTransactions = this.state.allTransactionsForSelectedDate.filter(transaction => {\n        if (transaction.expenseID === selectionVal) {\n          return transaction;\n        }\n      });\n      this.setState({\n        selectedTransactions: updatedTransactions\n      });\n    }\n  }\n\n  submitHandlerDeleteTransaction(e) {\n    console.log(e.target.value); //if (this.state.deleteConfirmVal) {\n\n    axios.delete('http://localhost:8080/transaction/deleteRow/' + e.target.value).then(response => {\n      const idOfDeletedTransaction = response.data;\n      const updatedAllTransactions = this.state.allTransactions.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction; // fix syntax\n        }\n      });\n      const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction; // fix syntax\n        }\n      });\n      const updatedSelectedTransactions = this.state.selectedTransactions.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction; // fix syntax\n        }\n      });\n      this.setState({\n        allTransaction: updatedAllTransactions,\n        allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate,\n        selectedTransactions: updatedSelectedTransactions\n      });\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    }); //window.location.reload();  \n    //}\n  }\n\n  renderTableData() {\n    let sumOfSpent = 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.selectedTransactions.reverse().map(transaction => {\n        let expenseName;\n        this.state.expenses.map(expense => {\n          if (expense.id === transaction.expenseID) {\n            expenseName = expense.expense;\n          }\n        });\n        sumOfSpent += transaction.spent;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: expenseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.payee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", transaction.spent.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"trashCan\",\n              children: /*#__PURE__*/_jsxDEV(Trash, {\n                color: \"crimson\",\n                size: 35,\n                onClick: e => {\n                  this.submitHandlerDeleteTransaction(transaction.id);\n                  this.toggleDeleteExpenseModal();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 51\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\",\n          children: \"Total Spent : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\",\n          children: [\"$\", sumOfSpent.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n  renderLogin() {\n    const history = createBrowserHistory();\n    history.push('/'); //changes address and bottom code changes the rendering\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n  changeLoginSetState() {\n    this.setState({\n      showLogin: true,\n      showHome: false,\n      showTransactions: false\n    });\n  }\n\n  renderTransactions() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n\n    if (localStorage.getItem(\"auth\") === \"authenticated\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mainTitle\",\n          id: \"trans-title\",\n          children: \"My Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.setState({\n                showHome: true,\n                showTransactions: false\n              });\n            },\n            id: \"goBack-button\",\n            className: \"button-25\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-flex\",\n          id: \"transDropDown\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: this.state.selectedMonth,\n            onChange: this.handleSelectedMonthDropDownChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"-1\",\n              children: \"--Month--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), this.state.listOfMonths.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: element.monthNum,\n              children: element.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleSelectedYearDropDownChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"-1\",\n              children: \"--Year--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 4,\n              children: this.state.today.getFullYear() - 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 3,\n              children: this.state.today.getFullYear() - 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 2,\n              children: this.state.today.getFullYear() - 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 1,\n              children: this.state.today.getFullYear() - 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: this.state.today.getFullYear(),\n              children: this.state.today.getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onChange: this.handleSortByChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"All\",\n              children: \"--Filter/All--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), this.state.expenses.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: element.id,\n              children: element.expense\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"expense-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Payee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.renderTableData()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You need to sign in to access this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"signIn-button\",\n            onClick: () => this.changeLoginSetState(),\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n\n  renderHome() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    const history = createBrowserHistory();\n    history.push('/home/' + username); //changes address and bottom code changes the rendering\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    axios.get(\"http://localhost:8080/transaction/allTransactions\") //getting all transactions in db\n    .then(res => {\n      const transactions = res.data;\n      this.setState({\n        allTransactions: transactions\n      });\n    });\n    axios.get(\"http://localhost:8080/expense/allExpenses\") //getting all expenses in db\n    .then(res => {\n      let userExpenses = res.data.filter(expense => {\n        if (expense.userName === username) {\n          return expense;\n        }\n      });\n      this.setState({\n        expenses: userExpenses\n      }, function () {\n        console.log(\"User Expense\", this.state.expenses);\n      });\n    });\n    const today = new Date();\n    this.setState({\n      selectedMonth: today.getMonth() + 1,\n      selectedYear: today.getFullYear()\n    }, function () {\n      axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n        console.log(res.data);\n        let userTransactions = res.data.filter(transaction => {\n          if (transaction.userName === username) {\n            return transaction;\n          }\n        });\n        console.log(\"users transactions\", userTransactions);\n        this.setState({\n          selectedTransactions: userTransactions,\n          allTransactionsForSelectedDate: userTransactions\n        }, function () {\n          console.log(this.state.selectedTransactions);\n        }); //this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data});\n\n        console.log(\"selectedMOnth\", this.state.selectedMonth);\n        console.log(\"selectedYear\", this.state.selectedYear);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.showTransactions && this.renderTransactions(), this.state.showHome && this.renderHome(), this.state.showLogin && this.renderLogin()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/src/Transactions.js"],"names":["React","useState","axios","Link","ThemeProvider","Home","createBrowserHistory","Login","Trash","Transactions","Component","constructor","props","state","selectedTransactions","allTransactions","allTransactionsForSelectedDate","expenses","listOfMonths","month","monthNum","selectedMonth","selectedYear","today","Date","showTransactions","showHome","showLogin","handleSelectedMonthDropDownChange","bind","handleSelectedYearDropDownChange","handleSortByChange","renderTableData","renderTransactions","renderHome","renderLogin","changeLoginSetState","e","pathName","window","location","pathname","username","split","selectedElement","target","value","console","log","map","element","parseInt","setState","get","then","res","data","userTransactions","filter","transaction","userName","updatedMap","Map","spentValsForAllExpenses","expense","set","id","changingSpentMap","expenseSpentVal","expenseID","spent","selectionVal","updatedTransactions","submitHandlerDeleteTransaction","delete","response","idOfDeletedTransaction","updatedAllTransactions","updatedallTransactionsForSelectedDate","updatedSelectedTransactions","allTransaction","catch","error","sumOfSpent","reverse","expenseName","transactionDate","payee","toFixed","toggleDeleteExpenseModal","history","push","localStorage","getItem","getFullYear","componentDidMount","transactions","userExpenses","getMonth","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport { ThemeProvider } from 'react-bootstrap';\r\nimport Home from './Home';\r\nimport {createBrowserHistory} from \"history\";\r\nimport Login from './Login'\r\n\r\nimport { Trash } from 'react-bootstrap-icons';\r\n\r\n\r\n\r\nexport default class Transactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTransactions: [],   //selected trans\r\n            allTransactions: [], //all transactions\r\n            allTransactionsForSelectedDate: [],\r\n            expenses: [],\r\n            listOfMonths: [{month:\"January\", monthNum: 1}, {month:\"February\", monthNum: 2}, {month:\"March\", monthNum: 3}, {month:\"April\", monthNum: 4}, {month:\"May\", monthNum: 5}, {month:\"June\", monthNum: 6}, {month:\"July\", monthNum: 7}, {month:\"August\", monthNum: 8}, {month:\"September\", monthNum: 9}, {month:\"October\", monthNum: 10}, {month:\"November\", monthNum: 11}, {month:\"December\", monthNum: 12}],\r\n            selectedMonth: -1,\r\n            selectedYear: -1,\r\n            \r\n            today: new Date(),\r\n\r\n            showTransactions: true,\r\n            showHome: false,\r\n            showLogin: false\r\n        };\r\n\r\n        this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\r\n        this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n\r\n        this.renderTableData = this.renderTableData.bind(this);\r\n        this.renderTransactions = this.renderTransactions.bind(this);\r\n        this.renderHome = this.renderHome.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.changeLoginSetState = this.changeLoginSetState.bind(this);\r\n    }\r\n\r\n    handleSelectedMonthDropDownChange(e) {\r\n        \r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No month selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            {this.state.listOfMonths.map((element) => {\r\n                if (element.monthNum === parseInt(e.target.value)) {\r\n                    selectedElement = element.monthNum;\r\n                }\r\n            })}\r\n            this.setState({selectedMonth: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    \r\n                    let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n\r\n                    this.state.expenses.map((expense) => {\r\n                        updatedMap.set(expense.id, 0.0);\r\n                    })\r\n                    \r\n                    this.setState({selectedTransactions: userTransactions, spentValsForAllExpenses: userTransactions}, function(){\r\n                        let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\r\n                        \r\n                        this.state.selectedTransactions.map((transaction) => {\r\n                            const expenseSpentVal = changingSpentMap.get(transaction.expenseID)\r\n                            changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                \r\n                        })\r\n                        this.setState({spentValsForAllExpenses: changingSpentMap})\r\n                    })\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSelectedYearDropDownChange(e) {\r\n        \r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No Year selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            selectedElement = e.target.value;\r\n            \r\n            this.setState({selectedYear: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    // console.log(\"newTransactionDate(YearChange): \" ,res.data);\r\n                    \r\n        \r\n                    // this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data}, function() {\r\n                        \r\n                        \r\n                    // });\r\n                    console.log(res.data);\r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    console.log(\"users transactions\", userTransactions)\r\n                    this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions}, function() {\r\n                        console.log(this.state.selectedTransactions)\r\n                    });\r\n                    \r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSortByChange(e) {\r\n        \r\n        console.log(\"e.target.val\",e.target.value)\r\n        let selectionVal = -1; //temp var\r\n\r\n        this.state.expenses.map((element) => {\r\n                    if (element.id === parseInt(e.target.value)) {\r\n                        selectionVal = parseInt(element.id);\r\n                        console.log(\"myselectionVal: \",selectionVal)\r\n                    }\r\n        });\r\n\r\n        if (selectionVal === -1) {\r\n            this.setState({selectedTransactions: this.state.allTransactionsForSelectedDate})\r\n        }\r\n        else {\r\n            \r\n            \r\n            const updatedTransactions = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                \r\n                \r\n                if (transaction.expenseID === selectionVal) {\r\n                    return transaction;\r\n                }\r\n            })\r\n\r\n            this.setState({selectedTransactions: updatedTransactions})\r\n        }\r\n    }\r\n\r\n    submitHandlerDeleteTransaction(e) {\r\n        \r\n        console.log(e.target.value)\r\n        \r\n        //if (this.state.deleteConfirmVal) {\r\n            axios.delete('http://localhost:8080/transaction/deleteRow/' + e.target.value)\r\n            .then(response => {\r\n                const idOfDeletedTransaction = response.data;\r\n                \r\n                const updatedAllTransactions = this.state.allTransactions.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n                \r\n                const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n\r\n                const updatedSelectedTransactions = this.state.selectedTransactions.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n\r\n                this.setState({allTransaction: updatedAllTransactions, allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate, selectedTransactions: updatedSelectedTransactions});\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            }) \r\n            //window.location.reload();  \r\n        //}\r\n    }\r\n\r\n    renderTableData() {\r\n\r\n        let sumOfSpent = 0;\r\n\r\n        return(<>\r\n            {this.state.selectedTransactions.reverse().map((transaction) => {\r\n                let expenseName;\r\n                this.state.expenses.map((expense) => {\r\n                    if (expense.id === transaction.expenseID) {\r\n                        expenseName = expense.expense;\r\n                    }\r\n                })\r\n                sumOfSpent += transaction.spent;\r\n                return (\r\n                    <tr>\r\n                        <td>{transaction.transactionDate}</td>\r\n                        <td>{expenseName}</td>\r\n                        <td>{transaction.payee}</td>\r\n                        <td>${(transaction.spent).toFixed(2)}</td>\r\n                        {/* <td><button name=\"deleteButton\" id='trashCan' value={transaction.id} onClick={(e) => {this.submitHandlerDeleteTransaction(e);}}><IconContext.Provider value={{ style: {   fontSize: '25px', color: \"crimson\"}}}><FaTrash/></IconContext.Provider></button></td> */}\r\n                        <td><button id='trashCan'><Trash color=\"crimson\" size={35} onClick={(e) => {this.submitHandlerDeleteTransaction(transaction.id);this.toggleDeleteExpenseModal()}}/></button></td>\r\n                    </tr>\r\n                )\r\n            })}\r\n            <tr>\r\n                <td className='bold'>Total Spent : </td>\r\n                <td className='bold'></td>\r\n                <td className='bold'></td>\r\n                <td className='bold'>${sumOfSpent.toFixed(2)}</td>\r\n                <td></td>\r\n            </tr>\r\n        </>)\r\n        \r\n    }\r\n\r\n    renderLogin() {\r\n        \r\n        const history = createBrowserHistory();\r\n        history.push('/');   //changes address and bottom code changes the rendering\r\n            return (<>\r\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n                \r\n                <Login />\r\n            </>)\r\n    }\r\n    changeLoginSetState() {\r\n        this.setState({showLogin: true, showHome: false, showTransactions: false});\r\n    }\r\n\r\n    renderTransactions() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        if (localStorage.getItem(\"auth\") === \"authenticated\"){\r\n            return (\r\n                <div className='App-header'>\r\n                    <h1 className=\"mainTitle\" id='trans-title'>My Transactions</h1>\r\n                    <div>\r\n                        {/* <Link to=\"/\"> */}\r\n                            <button onClick={() => {this.setState({showHome: true, showTransactions: false})}} id='goBack-button' className=\"button-25\">Go Back</button>\r\n                        {/* </Link> */}\r\n                    </div>\r\n                    \r\n                    <div className=\"dropdown-flex\" id=\"transDropDown\">\r\n                        <select value={this.state.selectedMonth} onChange={this.handleSelectedMonthDropDownChange}>\r\n                            <option disabled value=\"-1\">--Month--</option>\r\n                            {\r\n                            this.state.listOfMonths.map((element) => (\r\n                                <option value={element.monthNum}>{element.month}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select onChange={this.handleSelectedYearDropDownChange}>\r\n                            <option disabled value=\"-1\">--Year--</option>\r\n                            <option value={this.state.today.getFullYear()-4}>{this.state.today.getFullYear()-4}</option>\r\n                            <option value={this.state.today.getFullYear()-3}>{this.state.today.getFullYear()-3}</option>\r\n                            <option value={this.state.today.getFullYear()-2}>{this.state.today.getFullYear()-2}</option>\r\n                            <option value={this.state.today.getFullYear()-1}>{this.state.today.getFullYear()-1}</option>\r\n                            <option selected value={this.state.today.getFullYear()}>{this.state.today.getFullYear()}</option>\r\n                        </select>\r\n                        <select onChange={this.handleSortByChange}>\r\n                                <option value=\"All\">--Filter/All--</option>\r\n                                {this.state.expenses.map((element) => (\r\n                                    <option value={element.id}>{element.expense}</option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    \r\n                    <table className=\"expense-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Category</th>\r\n                                <th>Payee</th>\r\n                                <th>Spent</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTableData()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            \r\n            return (<>\r\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n                <div><h2>You need to sign in to access this page.</h2></div>\r\n                <div className=\"buttons-flex\"><button id=\"signIn-button\" onClick={() => this.changeLoginSetState()}>Sign in</button></div>\r\n                \r\n            </>)\r\n        }\r\n    }\r\n\r\n    renderHome() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        const history = createBrowserHistory();\r\n        history.push('/home/' + username);   //changes address and bottom code changes the rendering\r\n        return (<>\r\n            {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n            <Home />\r\n        </>)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        axios.get(\"http://localhost:8080/transaction/allTransactions\") //getting all transactions in db\r\n        .then(res => { \r\n            const transactions = res.data;\r\n            this.setState({allTransactions: transactions});\r\n        })\r\n\r\n        axios.get(\"http://localhost:8080/expense/allExpenses\")  //getting all expenses in db\r\n        .then(res => {\r\n\r\n            let userExpenses = (res.data).filter((expense) => {\r\n                if (expense.userName === username) {\r\n                    return expense;\r\n                }\r\n            })\r\n            this.setState({expenses: userExpenses}, function() {\r\n                console.log(\"User Expense\",this.state.expenses)\r\n            });\r\n            \r\n            \r\n        })\r\n        \r\n        const today = new Date();\r\n        this.setState({selectedMonth: today.getMonth()+1, selectedYear: today.getFullYear()}, function () {\r\n            axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    \r\n                    \r\n                    \r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    console.log(\"users transactions\", userTransactions)\r\n                    this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions}, function() {\r\n                        console.log(this.state.selectedTransactions)\r\n                    });\r\n                    \r\n                    //this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data});\r\n                    console.log(\"selectedMOnth\", this.state.selectedMonth)\r\n                    console.log(\"selectedYear\", this.state.selectedYear)\r\n                })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return(<>\r\n            <div>\r\n                {this.state.showTransactions && this.renderTransactions()}\r\n                {this.state.showHome && this.renderHome()}\r\n                {this.state.showLogin && this.renderLogin()}\r\n            </div>\r\n        </>)\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}