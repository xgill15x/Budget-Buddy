{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\desktop\\\\BudgetTracker\\\\react\\\\src\\\\Transactions.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Link } from \"react-router-dom\";\nimport { ThemeProvider } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTransactions: [],\n      //selected trans\n      allTransactions: [],\n      //all transactions\n      allTransactionsForSelectedDate: [],\n      expenses: [],\n      listOfMonths: [{\n        month: \"January\",\n        monthNum: 1\n      }, {\n        month: \"February\",\n        monthNum: 2\n      }, {\n        month: \"March\",\n        monthNum: 3\n      }, {\n        month: \"April\",\n        monthNum: 4\n      }, {\n        month: \"May\",\n        monthNum: 5\n      }, {\n        month: \"June\",\n        monthNum: 6\n      }, {\n        month: \"July\",\n        monthNum: 7\n      }, {\n        month: \"August\",\n        monthNum: 8\n      }, {\n        month: \"September\",\n        monthNum: 9\n      }, {\n        month: \"October\",\n        monthNum: 10\n      }, {\n        month: \"November\",\n        monthNum: 11\n      }, {\n        month: \"December\",\n        monthNum: 12\n      }],\n      selectedMonth: -1,\n      selectedYear: -1,\n      today: new Date()\n    };\n    this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\n    this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.renderTableData = this.renderTableData.bind(this);\n  }\n\n  handleSelectedMonthDropDownChange(e) {\n    let selectedElement = 0; //console.log(e.target.value)\n\n    if (e.target.value === \"-1\") {\n      console.log(\"No month selected.\");\n      return;\n    } else {\n      {\n        this.state.listOfMonths.map(element => {\n          if (element.monthNum === parseInt(e.target.value)) {\n            selectedElement = element.monthNum;\n          }\n        });\n      }\n      this.setState({\n        selectedMonth: selectedElement\n      }, function () {\n        axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n          console.log(\"newTransactionDate(MonthChange): \", res.data);\n          let updatedMap = new Map(this.state.spentValsForAllExpenses);\n          this.state.expenses.map(expense => {\n            updatedMap.set(expense.id, 0.0);\n          });\n          this.setState({\n            selectedTransactions: res.data,\n            spentValsForAllExpenses: updatedMap\n          }, function () {\n            let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\n            this.state.selectedTransactions.map(transaction => {\n              const expenseSpentVal = changingSpentMap.get(transaction.expenseID);\n              changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\n            });\n            this.setState({\n              spentValsForAllExpenses: changingSpentMap\n            });\n          });\n        });\n      });\n    }\n  }\n\n  handleSelectedYearDropDownChange(e) {\n    let selectedElement = 0; //console.log(e.target.value)\n\n    if (e.target.value === \"-1\") {\n      console.log(\"No Year selected.\");\n      return;\n    } else {\n      selectedElement = e.target.value;\n      this.setState({\n        selectedYear: selectedElement\n      }, function () {\n        axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n          console.log(\"newTransactionDate(YearChange): \", res.data);\n          this.setState({\n            selectedTransactions: res.data,\n            allTransactionsForSelectedDate: res.data\n          }, function () {});\n        });\n      });\n    }\n  }\n\n  handleSortByChange(e) {\n    console.log(\"e.target.val\", e.target.value);\n    let selectionVal = -1; //temp var\n\n    this.state.expenses.map(element => {\n      if (element.id === parseInt(e.target.value)) {\n        selectionVal = parseInt(element.id);\n        console.log(\"myselectionVal: \", selectionVal);\n      }\n    });\n\n    if (selectionVal === -1) {\n      this.setState({\n        selectedTransactions: this.state.allTransactionsForSelectedDate\n      });\n    } else {\n      const updatedTransactions = this.state.allTransactionsForSelectedDate.filter(transaction => {\n        if (transaction.expenseID === selectionVal) {\n          return transaction;\n        }\n      });\n      this.setState({\n        selectedTransactions: updatedTransactions\n      });\n    }\n  }\n\n  renderTableData() {\n    return this.state.selectedTransactions.reverse().map(transaction => {\n      let expenseName;\n      this.state.expenses.map(expense => {\n        if (expense.id === transaction.expenseID) {\n          expenseName = expense.expense;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.transactionDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: expenseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.payee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"$\", transaction.spent.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/transaction/allTransactions\").then(res => {\n      const transactions = res.data;\n      this.setState({\n        allTransactions: transactions\n      });\n    });\n    axios.get(\"http://localhost:8080/expense/allExpenses\").then(res => {\n      console.log(res.data);\n      const expenses = res.data;\n      this.setState({\n        expenses\n      });\n      this.setState({\n        staticExpenses: expenses\n      });\n    });\n    const today = new Date();\n    this.setState({\n      selectedMonth: today.getMonth() + 1,\n      selectedYear: today.getFullYear()\n    }, function () {\n      axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n        console.log(res);\n        this.setState({\n          selectedTransactions: res.data,\n          allTransactionsForSelectedDate: res.data\n        });\n        console.log(\"selectedMOnth\", this.state.selectedMonth);\n        console.log(\"selectedYear\", this.state.selectedYear);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mainTitle\",\n        children: \"All Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"buttons-flex\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-flex\",\n        id: \"dateDropDown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedMonth,\n          onChange: this.handleSelectedMonthDropDownChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"-1\",\n            children: \"--Month--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), this.state.listOfMonths.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: element.monthNum,\n            children: element.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleSelectedYearDropDownChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"-1\",\n            children: \"--Year--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() - 2,\n            children: this.state.today.getFullYear() - 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() - 1,\n            children: this.state.today.getFullYear() - 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: this.state.today.getFullYear(),\n            children: this.state.today.getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() + 1,\n            children: this.state.today.getFullYear() + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() + 2,\n            children: this.state.today.getFullYear() + 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleSortByChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"--Filter--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), this.state.expenses.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: element.id,\n            children: element.expense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"expense-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/src/Transactions.js"],"names":["React","useState","axios","Link","ThemeProvider","Transactions","Component","constructor","props","state","selectedTransactions","allTransactions","allTransactionsForSelectedDate","expenses","listOfMonths","month","monthNum","selectedMonth","selectedYear","today","Date","handleSelectedMonthDropDownChange","bind","handleSelectedYearDropDownChange","handleSortByChange","renderTableData","e","selectedElement","target","value","console","log","map","element","parseInt","setState","get","then","res","data","updatedMap","Map","spentValsForAllExpenses","expense","set","id","changingSpentMap","transaction","expenseSpentVal","expenseID","spent","selectionVal","updatedTransactions","filter","reverse","expenseName","transactionDate","payee","toFixed","componentDidMount","transactions","staticExpenses","getMonth","getFullYear","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport { ThemeProvider } from 'react-bootstrap';\r\n\r\n\r\nexport default class Transactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTransactions: [],   //selected trans\r\n            allTransactions: [], //all transactions\r\n            allTransactionsForSelectedDate: [],\r\n            expenses: [],\r\n            listOfMonths: [{month:\"January\", monthNum: 1}, {month:\"February\", monthNum: 2}, {month:\"March\", monthNum: 3}, {month:\"April\", monthNum: 4}, {month:\"May\", monthNum: 5}, {month:\"June\", monthNum: 6}, {month:\"July\", monthNum: 7}, {month:\"August\", monthNum: 8}, {month:\"September\", monthNum: 9}, {month:\"October\", monthNum: 10}, {month:\"November\", monthNum: 11}, {month:\"December\", monthNum: 12}],\r\n            selectedMonth: -1,\r\n            selectedYear: -1,\r\n            \r\n            today: new Date()\r\n        };\r\n\r\n        this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\r\n        this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n\r\n        this.renderTableData = this.renderTableData.bind(this);\r\n    }\r\n\r\n    handleSelectedMonthDropDownChange(e) {\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No month selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            {this.state.listOfMonths.map((element) => {\r\n                if (element.monthNum === parseInt(e.target.value)) {\r\n                    selectedElement = element.monthNum;\r\n                }\r\n            })}\r\n            this.setState({selectedMonth: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(\"newTransactionDate(MonthChange): \", res.data);\r\n                    \r\n                    let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n\r\n                    this.state.expenses.map((expense) => {\r\n                        updatedMap.set(expense.id, 0.0);\r\n                    })\r\n                    \r\n                    this.setState({selectedTransactions: res.data, spentValsForAllExpenses: updatedMap}, function(){\r\n                        let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\r\n                        \r\n                        this.state.selectedTransactions.map((transaction) => {\r\n                            const expenseSpentVal = changingSpentMap.get(transaction.expenseID)\r\n                            changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                \r\n                        })\r\n                        this.setState({spentValsForAllExpenses: changingSpentMap})\r\n                    })\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSelectedYearDropDownChange(e) {\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No Year selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            selectedElement = e.target.value;\r\n            \r\n            this.setState({selectedYear: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(\"newTransactionDate(YearChange): \" ,res.data);\r\n                    \r\n        \r\n                    this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data}, function() {\r\n                        \r\n                        \r\n                    });\r\n                    \r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSortByChange(e) {\r\n        \r\n        console.log(\"e.target.val\",e.target.value)\r\n        let selectionVal = -1; //temp var\r\n\r\n        this.state.expenses.map((element) => {\r\n                    if (element.id === parseInt(e.target.value)) {\r\n                        selectionVal = parseInt(element.id);\r\n                        console.log(\"myselectionVal: \",selectionVal)\r\n                    }\r\n        });\r\n\r\n        if (selectionVal === -1) {\r\n            this.setState({selectedTransactions: this.state.allTransactionsForSelectedDate})\r\n        }\r\n        else {\r\n            \r\n            \r\n            const updatedTransactions = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                \r\n                \r\n                if (transaction.expenseID === selectionVal) {\r\n                    return transaction;\r\n                }\r\n            })\r\n\r\n            this.setState({selectedTransactions: updatedTransactions})\r\n        }\r\n    }\r\n\r\n    renderTableData() {\r\n        return this.state.selectedTransactions.reverse().map((transaction) => {\r\n           let expenseName;\r\n           this.state.expenses.map((expense) => {\r\n               if (expense.id === transaction.expenseID) {\r\n                   expenseName = expense.expense;\r\n               }\r\n           })\r\n           return (\r\n              <tr>\r\n                 <td>{transaction.transactionDate}</td>\r\n                 <td>{expenseName}</td>\r\n                 <td>{transaction.payee}</td>\r\n                 <td>${(transaction.spent).toFixed(2)}</td>\r\n              </tr>\r\n           )\r\n        })\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/transaction/allTransactions\")\r\n        .then(res => {\r\n            const transactions = res.data;\r\n            this.setState({allTransactions: transactions});\r\n        })\r\n        axios.get(\"http://localhost:8080/expense/allExpenses\")\r\n        .then(res => {\r\n            console.log(res.data);\r\n            const expenses = res.data;\r\n            this.setState({expenses});\r\n            this.setState({staticExpenses: expenses})\r\n        })\r\n        \r\n        const today = new Date();\r\n        this.setState({selectedMonth: today.getMonth()+1, selectedYear: today.getFullYear()}, function () {\r\n            axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data});\r\n                    console.log(\"selectedMOnth\", this.state.selectedMonth)\r\n                    console.log(\"selectedYear\", this.state.selectedYear)\r\n                })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"mainTitle\">All Transactions</h1>\r\n                <div>\r\n                    <Link to=\"/\">\r\n                        <button className=\"buttons-flex\">Go Back</button>\r\n                    </Link>\r\n                </div>\r\n                \r\n                <div className=\"dropdown-flex\" id=\"dateDropDown\">\r\n                    <select value={this.state.selectedMonth} onChange={this.handleSelectedMonthDropDownChange}>\r\n                        <option disabled value=\"-1\">--Month--</option>\r\n                        {\r\n                        this.state.listOfMonths.map((element) => (\r\n                            <option value={element.monthNum}>{element.month}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select onChange={this.handleSelectedYearDropDownChange}>\r\n                        <option disabled value=\"-1\">--Year--</option>\r\n                        <option value={this.state.today.getFullYear()-2}>{this.state.today.getFullYear()-2}</option>\r\n                        <option value={this.state.today.getFullYear()-1}>{this.state.today.getFullYear()-1}</option>\r\n                        <option selected value={this.state.today.getFullYear()}>{this.state.today.getFullYear()}</option>\r\n                        <option value={this.state.today.getFullYear()+1}>{this.state.today.getFullYear()+1}</option>\r\n                        <option value={this.state.today.getFullYear()+2}>{this.state.today.getFullYear()+2}</option>\r\n                    </select>\r\n                    <select onChange={this.handleSortByChange}>\r\n                            <option value=\"All\">--Filter--</option>\r\n                            {this.state.expenses.map((element) => (\r\n                                <option value={element.id}>{element.expense}</option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n                \r\n                \r\n                <table className=\"expense-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Category</th>\r\n                            <th>Payee</th>\r\n                            <th>Spent</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}