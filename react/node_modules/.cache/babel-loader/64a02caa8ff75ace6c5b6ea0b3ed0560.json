{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\desktop\\\\BudgetTracker\\\\react\\\\src\\\\Home.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport AddExpenseForm from './AddExpenseForm';\nimport DeleteExpenseForm from './DeleteExpenseForm';\nimport EditExpenseForm from './EditExpenseForm';\nimport AddTransactionForm from './AddTransactionForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.submitHandlerAddExpense = e => {\n      e.preventDefault();\n      axios.post(\"http://localhost:8080/expense/addRow\", {\n        expense: e.target[0].value,\n        budget: e.target[1].value\n      }).then(response => {\n        const newId = response.data;\n        const newExpense = e.target[0].value;\n        const newBudget = parseFloat(e.target[1].value);\n        console.log(\"Expense: \" + e.target[0].value + \"\\n\" + \"Budget: \" + e.target[1].value + \"\\n\" + \"Assigned ID: \" + response.data);\n        const newExpenseObject = {\n          id: newId,\n          expense: newExpense,\n          budget: newBudget,\n          spent: 0.0,\n          remaining: newBudget\n        };\n        this.setState({\n          expenses: [...this.state.expenses, newExpenseObject]\n        });\n      }).catch(error => {\n        console.log(error);\n      }); //window.location.reload(); \n    };\n\n    this.submitHandlerAddTransaction = e => {\n      e.preventDefault();\n      let expenseSpent;\n      let nameOfExpense;\n      this.state.expenses.filter(element => {\n        if (element.id === this.state.transactionDropDownSelection) {\n          nameOfExpense = element.expense;\n          expenseSpent = element.spent;\n        }\n      });\n      axios.post(\"http://localhost:8080/transaction/addRow\", {\n        expenseID: this.state.transactionDropDownSelection,\n        payee: e.target[1].value,\n        spent: parseFloat(e.target[2].value),\n        expenseValue: nameOfExpense\n      }).then(response => {\n        console.log(response);\n      }).catch(error => {\n        console.log(error);\n      });\n      const updateData = {\n        spent: expenseSpent + parseFloat(e.target[2].value)\n      };\n      axios.patch('http://localhost:8080/expense/editSpent/' + this.state.transactionDropDownSelection, updateData);\n      const updatedExpenses = this.state.expenses.filter(element => {\n        if (element.id === this.state.transactionDropDownSelection) {\n          element.spent = expenseSpent + parseFloat(e.target[2].value);\n          return element;\n        } else {\n          return element;\n        }\n      });\n      this.setState({\n        expenses: updatedExpenses\n      });\n    };\n\n    this.state = {\n      id: null,\n      expense: \"\",\n      budget: 0.0,\n      expenses: [],\n      editDropDownSelection: 0,\n      transactionDropDownSelection: 0,\n      addExpenseToggle: false,\n      addTransactionToggle: false,\n      deleteExpenseToggle: false,\n      deleteConfirmVal: false,\n      editExpenseToggle: false\n    };\n    this.toggleAddExpenseModal = this.toggleAddExpenseModal.bind(this);\n    this.toggleAddTransactionModal = this.toggleAddTransactionModal.bind(this);\n    this.toggleDeleteExpenseModal = this.toggleDeleteExpenseModal.bind(this);\n    this.toggleEditExpenseModal = this.toggleEditExpenseModal.bind(this);\n    this.handleConfirmDelete = this.handleConfirmDelete.bind(this);\n    this.handleEditDropDownChange = this.handleEditDropDownChange.bind(this);\n    this.handleTransactionDropDownChange = this.handleTransactionDropDownChange.bind(this);\n    this.initEditDropDown = this.initEditDropDown.bind(this);\n    this.initTransactionDropDown = this.initTransactionDropDown.bind(this);\n    this.submitHandlerEditExpense = this.submitHandlerEditExpense.bind(this);\n  }\n\n  handleConfirmDelete(element) {\n    // Update the document title using the browser API\n    element = true;\n  }\n\n  submitHandlerDeleteExpense(e) {\n    //this.setState({id: e.target.value}) // value = expense id\n    console.log(e.target.value); //if (this.state.deleteConfirmVal) {\n\n    axios.delete('http://localhost:8080/expense/deleteRow/' + e.target.value).then(response => {\n      const idOfDeletedExpense = response.data;\n      const updatedExpenses = this.state.expenses.filter(expense => {\n        if (expense.id !== idOfDeletedExpense) {\n          return expense; // fix syntax\n        }\n      });\n      this.setState({\n        expenses: updatedExpenses\n      });\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    }); //window.location.reload();  \n    //}\n  }\n\n  submitHandlerEditExpense(e) {\n    e.preventDefault(); //console.log(e);\n\n    const data = {\n      expense: e.target[1].value,\n      budget: parseFloat(e.target[2].value)\n    };\n    axios.patch('http://localhost:8080/expense/editRow/' + this.state.editDropDownSelection, data).then(response => {\n      console.log(response);\n      const idOfEditedExpense = response.data;\n      const updatedExpenses = this.state.expenses.filter(element => {\n        if (element.id !== idOfEditedExpense) {\n          return element;\n        } else {\n          element.expense = e.target[1].value;\n          element.budget = parseFloat(e.target[2].value);\n          return element;\n        }\n      });\n      this.setState({\n        expenses: updatedExpenses\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  initEditDropDown() {\n    let lowestIndexExpense = -1;\n    {\n      this.state.expenses.map(element => {\n        if (lowestIndexExpense === -1) {\n          lowestIndexExpense = element.id;\n        } else {\n          if (element.id < lowestIndexExpense) {\n            lowestIndexExpense = element.id;\n          }\n        }\n      });\n    }\n    let elementWithSmallestIndex = \"\";\n    {\n      this.state.expenses.map(element => {\n        if (element.id === lowestIndexExpense) {\n          elementWithSmallestIndex = element.id;\n        }\n      });\n    }\n    this.setState({\n      editDropDownSelection: elementWithSmallestIndex\n    });\n  }\n\n  handleEditDropDownChange(e) {\n    //console.log(e);\n    let selectedElement = 0;\n    {\n      this.state.expenses.map(element => {\n        if (element.expense === e.target.value) {\n          selectedElement = element.id;\n        }\n      });\n    }\n    this.setState({\n      editDropDownSelection: selectedElement\n    });\n  }\n\n  initTransactionDropDown() {\n    let lowestIndexExpense = -1;\n    {\n      this.state.expenses.map(element => {\n        if (lowestIndexExpense === -1) {\n          lowestIndexExpense = element.id;\n        } else {\n          if (element.id < lowestIndexExpense) {\n            lowestIndexExpense = element.id;\n          }\n        }\n      });\n    }\n    let elementWithSmallestIndex = \"\";\n    {\n      this.state.expenses.map(element => {\n        if (element.id === lowestIndexExpense) {\n          elementWithSmallestIndex = element.id;\n        }\n      });\n    }\n    this.setState({\n      transactionDropDownSelection: elementWithSmallestIndex\n    });\n  }\n\n  handleTransactionDropDownChange(e) {\n    let selectedElement = 0;\n    {\n      this.state.expenses.map(element => {\n        if (element.expense === e.target.value) {\n          selectedElement = element.id;\n        }\n      });\n    }\n    this.setState({\n      transactionDropDownSelection: selectedElement\n    });\n  }\n\n  toggleAddExpenseModal() {\n    this.setState({\n      addExpenseToggle: !this.state.addExpenseToggle\n    });\n  }\n\n  toggleAddTransactionModal() {\n    this.setState({\n      addTransactionToggle: !this.state.addTransactionToggle\n    });\n  }\n\n  toggleDeleteExpenseModal() {\n    this.setState({\n      deleteExpenseToggle: !this.state.deleteExpenseToggle\n    });\n  }\n\n  toggleEditExpenseModal() {\n    this.setState({\n      editExpenseToggle: !this.state.editExpenseToggle\n    });\n  }\n\n  renderTableData() {\n    return this.state.expenses.map(element => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: element.expense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: element.budget\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: element.spent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: element.budget - element.spent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            name: \"deleteButton\",\n            value: element.id,\n            onClick: e => {\n              this.submitHandlerDeleteExpense(e);\n              this.toggleDeleteExpenseModal();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  componentDidMount() {\n    axios.get(\"http://localhost:8080/expense/allExpenses\").then(res => {\n      const expenses = res.data;\n      this.setState({\n        expenses\n      });\n    });\n  } // componentDidUpdate() {\n  //     axios.get(\"http://localhost:8080/expense/allExpenses\")\n  //     .then(res => {\n  //         const expenses = res.data;\n  //         this.setState({expenses});\n  //     })\n  // }\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mainTitle\",\n        children: \"Budget Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons-flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleAddExpenseModal,\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.toggleAddTransactionModal();\n            this.initTransactionDropDown();\n          },\n          children: \"Add Transaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.toggleEditExpenseModal();\n            this.initEditDropDown();\n          },\n          children: \"Edit Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddExpenseForm, {\n        handleClose: this.toggleAddExpenseModal,\n        show: this.state.addExpenseToggle,\n        submitHandler: this.submitHandlerAddExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteExpenseForm, {\n        show: this.state.deleteExpenseToggle,\n        handleClose: this.toggleDeleteExpenseModal,\n        deletConfirm: this.state.deleteConfirmVal,\n        handleDeleteConfirm: this.handleConfirmDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(EditExpenseForm, {\n        myList: this.state.expenses,\n        handleClose: this.toggleEditExpenseModal,\n        handleChange: this.handleDropDownChange,\n        show: this.state.editExpenseToggle,\n        submitHandler: this.submitHandlerEditExpense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n        myList: this.state.expenses,\n        handleClose: this.toggleAddTransactionModal,\n        show: this.state.addTransactionToggle,\n        submitHandler: this.submitHandlerAddTransaction,\n        handleChange: this.handleTransactionDropDownChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"expense-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Expense\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Budget\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Remaining\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete()\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/src/Home.js"],"names":["React","useState","axios","AddExpenseForm","DeleteExpenseForm","EditExpenseForm","AddTransactionForm","Home","Component","constructor","props","submitHandlerAddExpense","e","preventDefault","post","expense","target","value","budget","then","response","newId","data","newExpense","newBudget","parseFloat","console","log","newExpenseObject","id","spent","remaining","setState","expenses","state","catch","error","submitHandlerAddTransaction","expenseSpent","nameOfExpense","filter","element","transactionDropDownSelection","expenseID","payee","expenseValue","updateData","patch","updatedExpenses","editDropDownSelection","addExpenseToggle","addTransactionToggle","deleteExpenseToggle","deleteConfirmVal","editExpenseToggle","toggleAddExpenseModal","bind","toggleAddTransactionModal","toggleDeleteExpenseModal","toggleEditExpenseModal","handleConfirmDelete","handleEditDropDownChange","handleTransactionDropDownChange","initEditDropDown","initTransactionDropDown","submitHandlerEditExpense","submitHandlerDeleteExpense","delete","idOfDeletedExpense","idOfEditedExpense","lowestIndexExpense","map","elementWithSmallestIndex","selectedElement","renderTableData","componentDidMount","get","res","render","handleDropDownChange"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport AddExpenseForm from './AddExpenseForm';\r\nimport DeleteExpenseForm from './DeleteExpenseForm';\r\nimport EditExpenseForm from './EditExpenseForm';\r\nimport AddTransactionForm from './AddTransactionForm';\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: null,\r\n            expense: \"\",\r\n            budget:0.0,\r\n            expenses: [],\r\n            editDropDownSelection:0,\r\n            transactionDropDownSelection:0,\r\n\r\n            addExpenseToggle: false,\r\n            addTransactionToggle: false,\r\n            deleteExpenseToggle: false,\r\n            deleteConfirmVal: false,\r\n            editExpenseToggle: false\r\n        };\r\n\r\n        this.toggleAddExpenseModal = this.toggleAddExpenseModal.bind(this);\r\n        this.toggleAddTransactionModal = this.toggleAddTransactionModal.bind(this)\r\n        this.toggleDeleteExpenseModal = this.toggleDeleteExpenseModal.bind(this);\r\n        this.toggleEditExpenseModal = this.toggleEditExpenseModal.bind(this);\r\n        \r\n        this.handleConfirmDelete = this.handleConfirmDelete.bind(this);\r\n        this.handleEditDropDownChange = this.handleEditDropDownChange.bind(this);\r\n        this.handleTransactionDropDownChange = this.handleTransactionDropDownChange.bind(this);\r\n        this.initEditDropDown = this.initEditDropDown.bind(this);\r\n        this.initTransactionDropDown = this.initTransactionDropDown.bind(this);\r\n        this.submitHandlerEditExpense = this.submitHandlerEditExpense.bind(this);\r\n    }\r\n\r\n    submitHandlerAddExpense = e => {\r\n        e.preventDefault();\r\n        axios.post(\"http://localhost:8080/expense/addRow\",{\r\n            expense: e.target[0].value,\r\n            budget: e.target[1].value\r\n        }).then(response => {\r\n            \r\n            const newId = response.data;\r\n            const newExpense = e.target[0].value;\r\n            const newBudget = parseFloat(e.target[1].value);\r\n            \r\n            console.log(\"Expense: \" + e.target[0].value + \"\\n\" + \"Budget: \" + e.target[1].value + \"\\n\" + \"Assigned ID: \" + response.data)\r\n            const newExpenseObject = {\r\n                id: newId,\r\n                expense: newExpense,\r\n                budget: newBudget,\r\n                spent: 0.0,\r\n                remaining: newBudget\r\n            }\r\n            this.setState({\r\n                expenses: [...this.state.expenses, newExpenseObject]\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })  \r\n        //window.location.reload(); \r\n    }\r\n\r\n    submitHandlerAddTransaction = e => {\r\n        e.preventDefault();\r\n\r\n        let expenseSpent;\r\n        let nameOfExpense; \r\n        this.state.expenses.filter((element) => {\r\n            if (element.id === this.state.transactionDropDownSelection) {\r\n                nameOfExpense = element.expense;\r\n                expenseSpent = element.spent;\r\n            }\r\n        })\r\n\r\n        axios.post(\"http://localhost:8080/transaction/addRow\",{\r\n            expenseID: this.state.transactionDropDownSelection,\r\n            payee: e.target[1].value,\r\n            spent: parseFloat(e.target[2].value),\r\n            expenseValue: nameOfExpense \r\n        }).then(response => {\r\n            console.log(response)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        const updateData = {\r\n            spent: expenseSpent + parseFloat(e.target[2].value)\r\n        }\r\n\r\n        axios.patch('http://localhost:8080/expense/editSpent/' + this.state.transactionDropDownSelection, updateData)\r\n        \r\n        const updatedExpenses = this.state.expenses.filter( (element) => {\r\n            if (element.id === this.state.transactionDropDownSelection) {\r\n                element.spent = expenseSpent + parseFloat(e.target[2].value)\r\n                return element;\r\n            }\r\n            else {\r\n                return element;\r\n            }\r\n        })\r\n\r\n        this.setState({expenses: updatedExpenses})\r\n    \r\n    }\r\n\r\n    handleConfirmDelete(element){\r\n        // Update the document title using the browser API\r\n        element = true;\r\n    }\r\n    submitHandlerDeleteExpense (e) {\r\n        //this.setState({id: e.target.value}) // value = expense id\r\n        console.log(e.target.value)\r\n        \r\n        //if (this.state.deleteConfirmVal) {\r\n            axios.delete('http://localhost:8080/expense/deleteRow/' + e.target.value)\r\n            .then(response => {\r\n                const idOfDeletedExpense = response.data;\r\n                const updatedExpenses = this.state.expenses.filter((expense) => {\r\n                    if (expense.id !== idOfDeletedExpense) {\r\n                        return expense; // fix syntax\r\n                    }\r\n                });\r\n                this.setState({expenses: updatedExpenses});\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            }) \r\n            //window.location.reload();  \r\n        //}\r\n    }\r\n\r\n    submitHandlerEditExpense (e) {\r\n        e.preventDefault();\r\n        //console.log(e);\r\n\r\n        const data = {\r\n            expense: e.target[1].value,\r\n            budget: parseFloat(e.target[2].value)\r\n        }\r\n        axios.patch('http://localhost:8080/expense/editRow/' + this.state.editDropDownSelection, data)\r\n        .then(response => {\r\n            console.log(response)\r\n            const idOfEditedExpense = response.data;\r\n            const updatedExpenses = this.state.expenses.filter((element) => {\r\n                if (element.id !== idOfEditedExpense) {\r\n                    return element;\r\n                }\r\n                else{\r\n                    element.expense = e.target[1].value;\r\n                    element.budget = parseFloat(e.target[2].value);\r\n                    return element;\r\n                }\r\n                \r\n            })\r\n            this.setState({expenses: updatedExpenses});\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    initEditDropDown() {\r\n        let lowestIndexExpense = -1;\r\n        {this.state.expenses.map((element) => {\r\n            if (lowestIndexExpense === -1) {\r\n                lowestIndexExpense = element.id;\r\n            }\r\n            else {\r\n                if (element.id < lowestIndexExpense) {\r\n                    lowestIndexExpense = element.id;\r\n                }\r\n            }\r\n        })}\r\n        \r\n        let elementWithSmallestIndex = \"\";\r\n        {this.state.expenses.map((element) => {\r\n            if (element.id === lowestIndexExpense) {\r\n                elementWithSmallestIndex = element.id;\r\n            }\r\n        })}\r\n\r\n        this.setState({editDropDownSelection: elementWithSmallestIndex});\r\n    }\r\n    handleEditDropDownChange(e) {\r\n        //console.log(e);\r\n        let selectedElement=0;\r\n        {this.state.expenses.map((element) => {\r\n            if (element.expense === e.target.value) {\r\n                selectedElement = element.id;\r\n            }\r\n        })}\r\n        this.setState({ editDropDownSelection: selectedElement });\r\n    }\r\n\r\n    initTransactionDropDown() {\r\n        let lowestIndexExpense = -1;\r\n        {this.state.expenses.map((element) => {\r\n            if (lowestIndexExpense === -1) {\r\n                lowestIndexExpense = element.id;\r\n            }\r\n            else {\r\n                if (element.id < lowestIndexExpense) {\r\n                    lowestIndexExpense = element.id;\r\n                }\r\n            }\r\n        })}\r\n        \r\n        let elementWithSmallestIndex = \"\";\r\n        {this.state.expenses.map((element) => {\r\n            if (element.id === lowestIndexExpense) {\r\n                elementWithSmallestIndex = element.id;\r\n            }\r\n        })}\r\n\r\n        this.setState({transactionDropDownSelection: elementWithSmallestIndex});\r\n    }\r\n    handleTransactionDropDownChange(e) {\r\n        let selectedElement=0;\r\n        {this.state.expenses.map((element) => {\r\n            if (element.expense === e.target.value) {\r\n                selectedElement = element.id;\r\n            }\r\n        })}\r\n        this.setState({ transactionDropDownSelection: selectedElement });\r\n    }\r\n\r\n    toggleAddExpenseModal() {\r\n        this.setState({addExpenseToggle : !this.state.addExpenseToggle});\r\n    }\r\n    toggleAddTransactionModal() {\r\n        this.setState({addTransactionToggle: !this.state.addTransactionToggle});\r\n    }\r\n    toggleDeleteExpenseModal() {\r\n        this.setState({deleteExpenseToggle : !this.state.deleteExpenseToggle});\r\n    }\r\n    toggleEditExpenseModal() {\r\n        this.setState({editExpenseToggle: !this.state.editExpenseToggle});\r\n    }\r\n\r\n    renderTableData() {\r\n        return this.state.expenses.map((element) => {\r\n            \r\n           return (\r\n              <tr>\r\n                 <td>{element.expense}</td>\r\n                 <td>{element.budget}</td>\r\n                 <td>{element.spent}</td>\r\n                 <td>{element.budget-element.spent}</td>\r\n                 <td><button name=\"deleteButton\" value={element.id} onClick={(e) => {this.submitHandlerDeleteExpense(e);this.toggleDeleteExpenseModal()}}>Delete</button></td>\r\n              </tr>\r\n           )\r\n        })\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/expense/allExpenses\")\r\n        .then(res => {\r\n            const expenses = res.data;\r\n            this.setState({expenses});\r\n        })\r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     axios.get(\"http://localhost:8080/expense/allExpenses\")\r\n    //     .then(res => {\r\n    //         const expenses = res.data;\r\n    //         this.setState({expenses});\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"mainTitle\">Budget Tracker</h1>\r\n                <div className=\"buttons-flex\">\r\n                    <button onClick={this.toggleAddExpenseModal}>Add Expense</button>\r\n                    <button onClick={ () => {this.toggleAddTransactionModal();this.initTransactionDropDown();}}>Add Transaction</button>\r\n                    <button onClick={ () => {this.toggleEditExpenseModal();this.initEditDropDown();}}>Edit Expense</button>\r\n                </div>\r\n                <AddExpenseForm  handleClose={this.toggleAddExpenseModal} show={this.state.addExpenseToggle} submitHandler={this.submitHandlerAddExpense}/>\r\n                <DeleteExpenseForm show={this.state.deleteExpenseToggle} handleClose={this.toggleDeleteExpenseModal} deletConfirm={this.state.deleteConfirmVal} handleDeleteConfirm={this.handleConfirmDelete} />\r\n                <EditExpenseForm myList={this.state.expenses} handleClose={this.toggleEditExpenseModal} handleChange={this.handleDropDownChange} show={this.state.editExpenseToggle} submitHandler={this.submitHandlerEditExpense}/>\r\n                <AddTransactionForm  myList={this.state.expenses} handleClose={this.toggleAddTransactionModal} show={this.state.addTransactionToggle} submitHandler={this.submitHandlerAddTransaction} handleChange={this.handleTransactionDropDownChange}/>\r\n                <table className=\"expense-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Expense</th>\r\n                            <th>Budget</th>\r\n                            <th>Spent</th>\r\n                            <th>Remaining</th>\r\n                            <th>Delete()</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}