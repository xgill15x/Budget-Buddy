{"ast":null,"code":"var _jsxFileName = \"/Users/jason/Desktop/Budget-Tracker/react/src/Components/Transactions.js\";\nimport React from 'react';\nimport '../App.css';\nimport Home from './Home';\nimport { createBrowserHistory } from \"history\";\nimport Login from './Login';\nimport { Trash } from 'react-bootstrap-icons';\nimport { transactionsForSelectedDateEndpoint, getAllExpensesEndpoint, deleteTransactionsEndpoint, getAllTransactionsEndpoint } from '../Resources/Resources';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTransactions: [],\n      //selected trans\n      allTransactions: [],\n      //all transactions\n      allTransactionsForSelectedDate: [],\n      expenses: [],\n      listOfMonths: [{\n        month: \"January\",\n        monthNum: 1\n      }, {\n        month: \"February\",\n        monthNum: 2\n      }, {\n        month: \"March\",\n        monthNum: 3\n      }, {\n        month: \"April\",\n        monthNum: 4\n      }, {\n        month: \"May\",\n        monthNum: 5\n      }, {\n        month: \"June\",\n        monthNum: 6\n      }, {\n        month: \"July\",\n        monthNum: 7\n      }, {\n        month: \"August\",\n        monthNum: 8\n      }, {\n        month: \"September\",\n        monthNum: 9\n      }, {\n        month: \"October\",\n        monthNum: 10\n      }, {\n        month: \"November\",\n        monthNum: 11\n      }, {\n        month: \"December\",\n        monthNum: 12\n      }],\n      selectedMonth: -1,\n      selectedYear: -1,\n      selectedExpense: -1,\n      today: new Date(),\n      showTransactions: true,\n      showHome: false,\n      showLogin: false\n    };\n    this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\n    this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\n    this.handleFilter = this.handleFilter.bind(this);\n    this.renderTableData = this.renderTableData.bind(this);\n    this.renderTransactions = this.renderTransactions.bind(this);\n    this.renderHome = this.renderHome.bind(this);\n    this.renderLogin = this.renderLogin.bind(this);\n    this.changeLoginSetState = this.changeLoginSetState.bind(this);\n  }\n  handleSelectedMonthDropDownChange(e) {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    const numOfSelectedMonth = parseInt(e.target.value);\n    let selectedElement = 0;\n    if (e.target.value === \"-1\") {\n      // console.log(\"No month selected.\");\n      return;\n    } else {\n      {\n        this.state.listOfMonths.map(month => {\n          if (month.monthNum === numOfSelectedMonth) {\n            selectedElement = month.monthNum;\n          }\n        });\n      }\n      this.setState({\n        selectedMonth: selectedElement\n      }, function () {\n        const updatedMonth = this.state.selectedMonth;\n        const updatedYear = this.state.selectedYear;\n        transactionsForSelectedDateEndpoint(updatedMonth, updatedYear).then(response => {\n          //filter transactions of user\n          let userTransactions = response.data.filter(transaction => {\n            if (transaction.userName === username) {\n              return transaction;\n            }\n          });\n\n          //if condition is based on chosen filter value, (-1) repersents \"all\"\n          if (this.state.selectedExpense === -1) {\n            this.setState({\n              selectedTransactions: userTransactions,\n              allTransactionsForSelectedDate: userTransactions\n            });\n          } else {\n            let filteredUserTransactions = userTransactions.filter(transaction => {\n              if (transaction.expenseID === this.state.selectedExpense) {\n                return transaction;\n              }\n            });\n            this.setState({\n              selectedTransactions: filteredUserTransactions,\n              allTransactionsForSelectedDate: userTransactions\n            });\n          }\n        });\n      });\n    }\n  }\n  handleSelectedYearDropDownChange(e) {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    const numOfSelectedYear = parseInt(e.target.value);\n    if (e.target.value === \"-1\") {\n      //-1 repersents no year selected\n      return;\n    } else {\n      this.setState({\n        selectedYear: numOfSelectedYear\n      }, function () {\n        const updatedMonth = this.state.selectedMonth;\n        const updatedYear = this.state.selectedYear;\n        transactionsForSelectedDateEndpoint(updatedMonth, updatedYear).then(response => {\n          //filter users transactions\n          let userTransactions = response.data.filter(transaction => {\n            if (transaction.userName === username) {\n              return transaction;\n            }\n          });\n\n          //factor in the current filterted expense\n          if (this.state.selectedExpense === -1) {\n            this.setState({\n              selectedTransactions: userTransactions,\n              allTransactionsForSelectedDate: userTransactions\n            });\n          } else {\n            let filteredUserTransactions = userTransactions.filter(transaction => {\n              if (transaction.expenseID === this.state.selectedExpense) {\n                return transaction;\n              }\n            });\n            this.setState({\n              selectedTransactions: filteredUserTransactions,\n              allTransactionsForSelectedDate: userTransactions\n            }, function () {});\n          }\n        });\n      });\n    }\n  }\n  handleFilter(e) {\n    const expenseID = parseInt(e.target.value);\n    let selectionVal = -1;\n    this.state.expenses.map(element => {\n      if (element.id === expenseID) {\n        selectionVal = parseInt(element.id);\n      }\n    });\n    this.setState({\n      selectedExpense: selectionVal\n    }, function () {\n      //-1 repersents \"all\"\n      if (selectionVal === -1) {\n        this.setState({\n          selectedTransactions: this.state.allTransactionsForSelectedDate\n        });\n      } else {\n        const updatedTransactions = this.state.allTransactionsForSelectedDate.filter(transaction => {\n          if (transaction.expenseID === selectionVal) {\n            return transaction;\n          }\n        });\n        this.setState({\n          selectedTransactions: updatedTransactions\n        });\n      }\n    });\n  }\n  submitHandlerDeleteTransaction(e) {\n    const transactionID = e;\n    deleteTransactionsEndpoint(transactionID).then(response => {\n      const idOfDeletedTransaction = response.data;\n\n      //update transaction table\n      const updatedAllTransactions = this.state.allTransactions.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction;\n        }\n      });\n      const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction;\n        }\n      });\n      const updatedSelectedTransactions = this.state.selectedTransactions.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction;\n        }\n      });\n      this.setState({\n        allTransaction: updatedAllTransactions,\n        allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate,\n        selectedTransactions: updatedSelectedTransactions\n      });\n      //console.log(response)\n    }).catch(error => {\n      //console.log(error)\n    });\n  }\n  renderTableData() {\n    let sumOfSpent = 0;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.selectedTransactions.reverse().map(transaction => {\n        let expenseName;\n        this.state.expenses.map(expense => {\n          if (expense.id === transaction.expenseID) {\n            expenseName = expense.expense;\n          }\n        });\n        sumOfSpent += transaction.spent;\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.transactionDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: expenseName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: transaction.payee\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", transaction.spent.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                this.submitHandlerDeleteTransaction(transaction.id);\n              },\n              id: \"trashCan\",\n              children: /*#__PURE__*/_jsxDEV(Trash, {\n                color: \"crimson\",\n                size: \"2em\",\n                onClick: e => {\n                  this.submitHandlerDeleteTransaction(transaction.id);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 123\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 21\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\",\n          children: \"Total Spent : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          className: \"bold\",\n          children: [\"$\", sumOfSpent.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n  renderLogin() {\n    const history = createBrowserHistory();\n    history.push('/'); //changes address and bottom code changes the rendering\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n  changeLoginSetState() {\n    this.setState({\n      showLogin: true,\n      showHome: false,\n      showTransactions: false\n    });\n  }\n  renderTransactions() {\n    if (localStorage.getItem(\"auth\") === \"authenticated\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mainTitle\",\n          id: \"trans-title\",\n          children: \"My Transactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              this.setState({\n                showHome: true,\n                showTransactions: false\n              });\n            },\n            id: \"goBack-button\",\n            className: \"button-25\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-flex\",\n          id: \"transDropDown\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectColor\",\n            value: this.state.selectedMonth,\n            onChange: this.handleSelectedMonthDropDownChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"-1\",\n              children: \"--Month--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 29\n            }, this), this.state.listOfMonths.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: element.monthNum,\n              children: element.month\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectColor\",\n            onChange: this.handleSelectedYearDropDownChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              disabled: true,\n              value: \"-1\",\n              children: \"--Year--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 4,\n              children: this.state.today.getFullYear() - 4\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 3,\n              children: this.state.today.getFullYear() - 3\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 2,\n              children: this.state.today.getFullYear() - 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: this.state.today.getFullYear() - 1,\n              children: this.state.today.getFullYear() - 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              value: this.state.today.getFullYear(),\n              children: this.state.today.getFullYear()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"selectColor\",\n            onChange: this.handleFilter,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"All\",\n              children: \"--Filter/All--\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 33\n            }, this), this.state.expenses.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: element.id,\n              children: element.expense\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"expense-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Payee\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Spent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.renderTableData()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"You need to sign in to access this page.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons-flex\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-25\",\n            id: \"modalButtons\",\n            onClick: () => this.changeLoginSetState(),\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true);\n    }\n  }\n  renderHome() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    const history = createBrowserHistory();\n    history.push('/home/' + username); //changes address and bottom code changes the rendering\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  componentDidMount() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    getAllTransactionsEndpoint() //getting all transactions in db\n    .then(response => {\n      const transactions = response.data;\n      this.setState({\n        allTransactions: transactions\n      });\n    });\n    getAllExpensesEndpoint() //getting all expenses in db\n    .then(response => {\n      //filter out users expenses\n      let userExpenses = response.data.filter(expense => {\n        if (expense.userName === username) {\n          return expense;\n        }\n      });\n      this.setState({\n        expenses: userExpenses\n      });\n    });\n    const today = new Date();\n    this.setState({\n      selectedMonth: today.getMonth() + 1,\n      selectedYear: today.getFullYear()\n    }, function () {\n      const updatedMonth = this.state.selectedMonth;\n      const updatedYear = this.state.selectedYear;\n      transactionsForSelectedDateEndpoint(updatedMonth, updatedYear).then(response => {\n        let userTransactions = response.data.filter(transaction => {\n          if (transaction.userName === username) {\n            return transaction;\n          }\n        });\n        this.setState({\n          selectedTransactions: userTransactions,\n          allTransactionsForSelectedDate: userTransactions\n        });\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.showTransactions && this.renderTransactions(), this.state.showHome && this.renderHome(), this.state.showLogin && this.renderLogin()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n}","map":{"version":3,"names":["React","Home","createBrowserHistory","Login","Trash","transactionsForSelectedDateEndpoint","getAllExpensesEndpoint","deleteTransactionsEndpoint","getAllTransactionsEndpoint","jsxDEV","_jsxDEV","Fragment","_Fragment","Transactions","Component","constructor","props","state","selectedTransactions","allTransactions","allTransactionsForSelectedDate","expenses","listOfMonths","month","monthNum","selectedMonth","selectedYear","selectedExpense","today","Date","showTransactions","showHome","showLogin","handleSelectedMonthDropDownChange","bind","handleSelectedYearDropDownChange","handleFilter","renderTableData","renderTransactions","renderHome","renderLogin","changeLoginSetState","e","pathName","window","location","pathname","username","split","numOfSelectedMonth","parseInt","target","value","selectedElement","map","setState","updatedMonth","updatedYear","then","response","userTransactions","data","filter","transaction","userName","filteredUserTransactions","expenseID","numOfSelectedYear","selectionVal","element","id","updatedTransactions","submitHandlerDeleteTransaction","transactionID","idOfDeletedTransaction","updatedAllTransactions","updatedallTransactionsForSelectedDate","updatedSelectedTransactions","allTransaction","catch","error","sumOfSpent","children","reverse","expenseName","expense","spent","transactionDate","fileName","_jsxFileName","lineNumber","columnNumber","payee","toFixed","onClick","color","size","className","history","push","localStorage","getItem","onChange","disabled","getFullYear","selected","componentDidMount","transactions","userExpenses","getMonth","render"],"sources":["/Users/jason/Desktop/Budget-Tracker/react/src/Components/Transactions.js"],"sourcesContent":["import React from 'react';\nimport '../App.css';\nimport Home from './Home';\nimport {createBrowserHistory} from \"history\";\nimport Login from './Login'\nimport { Trash } from 'react-bootstrap-icons';\nimport {\n    transactionsForSelectedDateEndpoint,\n    getAllExpensesEndpoint,\n    deleteTransactionsEndpoint,\n    getAllTransactionsEndpoint} from '../Resources/Resources';\n\nexport default class Transactions extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedTransactions: [],   //selected trans\n            allTransactions: [], //all transactions\n            allTransactionsForSelectedDate: [],\n            expenses: [],\n            listOfMonths: [{month:\"January\", monthNum: 1}, {month:\"February\", monthNum: 2}, {month:\"March\", monthNum: 3}, {month:\"April\", monthNum: 4}, {month:\"May\", monthNum: 5}, {month:\"June\", monthNum: 6}, {month:\"July\", monthNum: 7}, {month:\"August\", monthNum: 8}, {month:\"September\", monthNum: 9}, {month:\"October\", monthNum: 10}, {month:\"November\", monthNum: 11}, {month:\"December\", monthNum: 12}],\n            selectedMonth: -1,\n            selectedYear: -1,\n            selectedExpense: -1,\n            today: new Date(),\n            showTransactions: true,\n            showHome: false,\n            showLogin: false\n        };\n\n        this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\n        this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\n        this.handleFilter = this.handleFilter.bind(this);\n        this.renderTableData = this.renderTableData.bind(this);\n        this.renderTransactions = this.renderTransactions.bind(this);\n        this.renderHome = this.renderHome.bind(this);\n        this.renderLogin = this.renderLogin.bind(this);\n        this.changeLoginSetState = this.changeLoginSetState.bind(this);\n    }\n\n    handleSelectedMonthDropDownChange(e) {\n        \n        const pathName = window.location.pathname;\n        const username = pathName.split('/')[2];\n        const numOfSelectedMonth = parseInt(e.target.value);\n        \n        let selectedElement=0;\n\n        if (e.target.value === \"-1\") {\n            // console.log(\"No month selected.\");\n            return;\n        }\n        else{\n\n            {this.state.listOfMonths.map((month) => {\n                if (month.monthNum === numOfSelectedMonth) {\n                    selectedElement = month.monthNum;\n                }\n            })}\n            \n            this.setState({selectedMonth: selectedElement}, function () {\n                \n                const updatedMonth = this.state.selectedMonth;\n                const updatedYear = this.state.selectedYear;\n\n                transactionsForSelectedDateEndpoint(updatedMonth, updatedYear)\n                .then(response => {\n\n                    //filter transactions of user\n                    let userTransactions = (response.data).filter((transaction) => {\n                        if (transaction.userName === username) {\n                            return transaction;\n                        }\n                    })\n\n                    //if condition is based on chosen filter value, (-1) repersents \"all\"\n                    if (this.state.selectedExpense === -1) {\n                        this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions});\n                    }\n                    else {\n                        let filteredUserTransactions = userTransactions.filter((transaction) => {\n                            if (transaction.expenseID === this.state.selectedExpense) {\n                                return transaction;\n                            }\n                        })\n                        this.setState({selectedTransactions: filteredUserTransactions, allTransactionsForSelectedDate: userTransactions});\n                    }\n                })\n            });\n        }\n    }\n\n    handleSelectedYearDropDownChange(e) {\n        \n        const pathName = window.location.pathname;\n        const username = pathName.split('/')[2];\n        const numOfSelectedYear = parseInt(e.target.value);\n\n        if (e.target.value === \"-1\") { //-1 repersents no year selected\n            return;\n        }\n        else{\n            \n            this.setState({selectedYear: numOfSelectedYear}, function () {\n                \n                const updatedMonth = this.state.selectedMonth;\n                const updatedYear = this.state.selectedYear;\n\n                transactionsForSelectedDateEndpoint(updatedMonth, updatedYear)\n                .then(response => {\n                    \n                    //filter users transactions\n                    let userTransactions = (response.data).filter((transaction) => {\n                        \n                        if (transaction.userName === username) {\n                            return transaction;\n                        }\n                    })\n\n                    //factor in the current filterted expense\n                    if (this.state.selectedExpense === -1) {\n                        this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions});\n                    }\n                    else {\n                        let filteredUserTransactions = userTransactions.filter((transaction) => {\n                            if (transaction.expenseID === this.state.selectedExpense) {\n                                return transaction;\n                            }\n                        })\n                        this.setState({selectedTransactions: filteredUserTransactions, allTransactionsForSelectedDate: userTransactions}, function() {\n                    });\n                    }  \n                })\n            });\n        }\n    }\n\n    handleFilter(e) {\n        \n        const expenseID = parseInt(e.target.value);\n        let selectionVal = -1;\n\n        this.state.expenses.map((element) => {\n            if (element.id === expenseID) {\n                selectionVal = parseInt(element.id);\n            }\n        });\n\n        this.setState({selectedExpense: selectionVal}, function() {\n            \n            //-1 repersents \"all\"\n            if (selectionVal === -1) {\n                this.setState({selectedTransactions: this.state.allTransactionsForSelectedDate});\n            }\n            else {\n\n                const updatedTransactions = this.state.allTransactionsForSelectedDate.filter((transaction) => {\n                    if (transaction.expenseID === selectionVal) {\n                        return transaction;\n                    }\n                })\n                this.setState({selectedTransactions: updatedTransactions});\n            }\n        });\n    }\n\n    submitHandlerDeleteTransaction(e) {\n        \n        const transactionID = e;\n        \n        deleteTransactionsEndpoint(transactionID)\n        .then(response => {\n                \n            const idOfDeletedTransaction = response.data;\n\n            //update transaction table\n            const updatedAllTransactions = this.state.allTransactions.filter((transaction) => {\n                if (transaction.id !== idOfDeletedTransaction) {\n                    return transaction;\n                }\n            });\n                \n            const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter((transaction) => {\n                if (transaction.id !== idOfDeletedTransaction) {\n                    return transaction;\n                }\n            });\n\n            const updatedSelectedTransactions = this.state.selectedTransactions.filter((transaction) => {\n                if (transaction.id !== idOfDeletedTransaction) {\n                    return transaction;\n                }\n            });\n\n            this.setState({allTransaction: updatedAllTransactions, allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate, selectedTransactions: updatedSelectedTransactions});\n            //console.log(response)\n        }).catch(error => {\n            //console.log(error)\n        }) \n    }\n\n    renderTableData() {\n\n        let sumOfSpent = 0;\n\n        return(<>\n            {this.state.selectedTransactions.reverse().map((transaction) => {\n                let expenseName;\n                this.state.expenses.map((expense) => {\n                    if (expense.id === transaction.expenseID) {\n                        expenseName = expense.expense;\n                    }\n                })\n                sumOfSpent += transaction.spent;\n                return (\n                    <tr>\n                        <td>{transaction.transactionDate}</td>\n                        <td>{expenseName}</td>\n                        <td>{transaction.payee}</td>\n                        <td>${(transaction.spent).toFixed(2)}</td>\n                        {/* <td><button name=\"deleteButton\" id='trashCan' value={transaction.id} onClick={(e) => {this.submitHandlerDeleteTransaction(e);}}><IconContext.Provider value={{ style: {   fontSize: '25px', color: \"crimson\"}}}><FaTrash/></IconContext.Provider></button></td> */}\n                        <td><button onClick={(e) => {this.submitHandlerDeleteTransaction(transaction.id);}} id='trashCan'><Trash color=\"crimson\" size={\"2em\"} onClick={(e) => {this.submitHandlerDeleteTransaction(transaction.id);}}/></button></td>\n                    </tr>\n                )\n            })}\n            <tr>\n                <td className='bold'>Total Spent : </td>\n                <td className='bold'></td>\n                <td className='bold'></td>\n                <td className='bold'>${sumOfSpent.toFixed(2)}</td>\n                <td></td>\n            </tr>\n        </>)\n        \n    }\n\n    renderLogin() {\n        \n        const history = createBrowserHistory();\n        history.push('/');   //changes address and bottom code changes the rendering\n            return (<>\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\n                \n                <Login />\n            </>)\n    }\n    changeLoginSetState() {\n        this.setState({showLogin: true, showHome: false, showTransactions: false});\n    }\n\n    renderTransactions() {\n        \n        if (localStorage.getItem(\"auth\") === \"authenticated\"){\n            return (\n                <div className='App-header'>\n                    <h1 className=\"mainTitle\" id='trans-title'>My Transactions</h1>\n                    <div>\n                        {/* <Link to=\"/\"> */}\n                            <button onClick={() => {this.setState({showHome: true, showTransactions: false})}} id='goBack-button' className=\"button-25\">Go Back</button>\n                        {/* </Link> */}\n                    </div>\n                    \n                    <div className=\"dropdown-flex\" id=\"transDropDown\">\n                        <select id='selectColor' value={this.state.selectedMonth} onChange={this.handleSelectedMonthDropDownChange}>\n                            <option disabled value=\"-1\">--Month--</option>\n                            {\n                            this.state.listOfMonths.map((element) => (\n                                <option value={element.monthNum}>{element.month}</option>\n                            ))}\n                        </select>\n                        <select id='selectColor' onChange={this.handleSelectedYearDropDownChange}>\n                            <option disabled value=\"-1\">--Year--</option>\n                            <option value={this.state.today.getFullYear()-4}>{this.state.today.getFullYear()-4}</option>\n                            <option value={this.state.today.getFullYear()-3}>{this.state.today.getFullYear()-3}</option>\n                            <option value={this.state.today.getFullYear()-2}>{this.state.today.getFullYear()-2}</option>\n                            <option value={this.state.today.getFullYear()-1}>{this.state.today.getFullYear()-1}</option>\n                            <option selected value={this.state.today.getFullYear()}>{this.state.today.getFullYear()}</option>\n                        </select>\n                        <select id='selectColor' onChange={this.handleFilter}>\n                                <option value=\"All\">--Filter/All--</option>\n                                {this.state.expenses.map((element) => (\n                                    <option value={element.id}>{element.expense}</option>\n                                ))}\n                        </select>\n                    </div>\n                    \n                    <table className=\"expense-table\">\n                        <thead>\n                            <tr>\n                                <th>Date</th>\n                                <th>Category</th>\n                                <th>Payee</th>\n                                <th>Spent</th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {this.renderTableData()}\n                        </tbody>\n                    </table>\n                </div>\n            )\n        }\n        else {\n            \n            return (<>\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\n                <div><h2>You need to sign in to access this page.</h2></div>\n                <div className=\"buttons-flex\"><button className=\"button-25\" id=\"modalButtons\" onClick={() => this.changeLoginSetState()}>Sign in</button></div>\n                \n            </>)\n        }\n    }\n\n    renderHome() {\n        const pathName = window.location.pathname;\n        const username = pathName.split('/')[2];\n        \n        const history = createBrowserHistory();\n        history.push('/home/' + username);   //changes address and bottom code changes the rendering\n        return (<>\n            <Home />\n        </>)\n    }\n\n    componentDidMount() {\n\n        const pathName = window.location.pathname;\n        const username = pathName.split('/')[2];\n        \n        getAllTransactionsEndpoint() //getting all transactions in db\n        .then(response => { \n            const transactions = response.data;\n            this.setState({allTransactions: transactions});\n        })\n\n        getAllExpensesEndpoint()  //getting all expenses in db\n        .then(response => {\n\n            //filter out users expenses\n            let userExpenses = (response.data).filter((expense) => {\n                if (expense.userName === username) {\n                    return expense;\n                }\n            })\n            this.setState({expenses: userExpenses})\n        \n        })\n        \n        const today = new Date();\n        this.setState({selectedMonth: today.getMonth()+1, selectedYear: today.getFullYear()}, function () {\n            const updatedMonth = this.state.selectedMonth;\n            const updatedYear = this.state.selectedYear;\n            transactionsForSelectedDateEndpoint(updatedMonth, updatedYear)\n                .then(response => {\n        \n                    let userTransactions = (response.data).filter((transaction) => {\n                        if (transaction.userName === username) {\n                            return transaction;\n                        }\n                    })\n                    \n                    this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions});\n                    \n                })\n            \n        });\n        \n    }\n\n    render() {\n\n        return(<>\n            <div>\n                {this.state.showTransactions && this.renderTransactions()}\n                {this.state.showHome && this.renderHome()}\n                {this.state.showLogin && this.renderLogin()}\n            </div>\n        </>)\n        \n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}