{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jason\\\\OneDrive\\\\desktop\\\\BudgetTracker\\\\react\\\\src\\\\Transactions.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { Link } from \"react-router-dom\";\nimport { ThemeProvider } from 'react-bootstrap';\nimport { createBrowserHistory } from \"history\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Transactions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTransactions: [],\n      //selected trans\n      allTransactions: [],\n      //all transactions\n      allTransactionsForSelectedDate: [],\n      expenses: [],\n      listOfMonths: [{\n        month: \"January\",\n        monthNum: 1\n      }, {\n        month: \"February\",\n        monthNum: 2\n      }, {\n        month: \"March\",\n        monthNum: 3\n      }, {\n        month: \"April\",\n        monthNum: 4\n      }, {\n        month: \"May\",\n        monthNum: 5\n      }, {\n        month: \"June\",\n        monthNum: 6\n      }, {\n        month: \"July\",\n        monthNum: 7\n      }, {\n        month: \"August\",\n        monthNum: 8\n      }, {\n        month: \"September\",\n        monthNum: 9\n      }, {\n        month: \"October\",\n        monthNum: 10\n      }, {\n        month: \"November\",\n        monthNum: 11\n      }, {\n        month: \"December\",\n        monthNum: 12\n      }],\n      selectedMonth: -1,\n      selectedYear: -1,\n      today: new Date(),\n      showTransactions: true,\n      showHome: false\n    };\n    this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\n    this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.renderTableData = this.renderTableData.bind(this);\n    this.renderTransactions = this.renderTransactions.bind(this);\n    this.renderHome = this.renderHome.bind(this);\n  }\n\n  handleSelectedMonthDropDownChange(e) {\n    let selectedElement = 0; //console.log(e.target.value)\n\n    if (e.target.value === \"-1\") {\n      console.log(\"No month selected.\");\n      return;\n    } else {\n      {\n        this.state.listOfMonths.map(element => {\n          if (element.monthNum === parseInt(e.target.value)) {\n            selectedElement = element.monthNum;\n          }\n        });\n      }\n      this.setState({\n        selectedMonth: selectedElement\n      }, function () {\n        axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n          console.log(\"newTransactionDate(MonthChange): \", res.data);\n          let updatedMap = new Map(this.state.spentValsForAllExpenses);\n          this.state.expenses.map(expense => {\n            updatedMap.set(expense.id, 0.0);\n          });\n          this.setState({\n            selectedTransactions: res.data,\n            spentValsForAllExpenses: updatedMap\n          }, function () {\n            let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\n            this.state.selectedTransactions.map(transaction => {\n              const expenseSpentVal = changingSpentMap.get(transaction.expenseID);\n              changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\n            });\n            this.setState({\n              spentValsForAllExpenses: changingSpentMap\n            });\n          });\n        });\n      });\n    }\n  }\n\n  handleSelectedYearDropDownChange(e) {\n    let selectedElement = 0; //console.log(e.target.value)\n\n    if (e.target.value === \"-1\") {\n      console.log(\"No Year selected.\");\n      return;\n    } else {\n      selectedElement = e.target.value;\n      this.setState({\n        selectedYear: selectedElement\n      }, function () {\n        axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n          console.log(\"newTransactionDate(YearChange): \", res.data);\n          this.setState({\n            selectedTransactions: res.data,\n            allTransactionsForSelectedDate: res.data\n          }, function () {});\n        });\n      });\n    }\n  }\n\n  handleSortByChange(e) {\n    console.log(\"e.target.val\", e.target.value);\n    let selectionVal = -1; //temp var\n\n    this.state.expenses.map(element => {\n      if (element.id === parseInt(e.target.value)) {\n        selectionVal = parseInt(element.id);\n        console.log(\"myselectionVal: \", selectionVal);\n      }\n    });\n\n    if (selectionVal === -1) {\n      this.setState({\n        selectedTransactions: this.state.allTransactionsForSelectedDate\n      });\n    } else {\n      const updatedTransactions = this.state.allTransactionsForSelectedDate.filter(transaction => {\n        if (transaction.expenseID === selectionVal) {\n          return transaction;\n        }\n      });\n      this.setState({\n        selectedTransactions: updatedTransactions\n      });\n    }\n  }\n\n  submitHandlerDeleteTransaction(e) {\n    console.log(e.target.value); //if (this.state.deleteConfirmVal) {\n\n    axios.delete('http://localhost:8080/transaction/deleteRow/' + e.target.value).then(response => {\n      const idOfDeletedTransaction = response.data;\n      const updatedAllTransactions = this.state.allTransactions.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction; // fix syntax\n        }\n      });\n      const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction; // fix syntax\n        }\n      });\n      const updatedSelectedTransactions = this.state.selectedTransactions.filter(transaction => {\n        if (transaction.id !== idOfDeletedTransaction) {\n          return transaction; // fix syntax\n        }\n      });\n      this.setState({\n        allTransaction: updatedAllTransactions,\n        allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate,\n        selectedTransactions: updatedSelectedTransactions\n      });\n      console.log(response);\n    }).catch(error => {\n      console.log(error);\n    }); //window.location.reload();  \n    //}\n  }\n\n  renderTableData() {\n    return this.state.selectedTransactions.reverse().map(transaction => {\n      let expenseName;\n      this.state.expenses.map(expense => {\n        if (expense.id === transaction.expenseID) {\n          expenseName = expense.expense;\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.transactionDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: expenseName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: transaction.payee\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"$\", transaction.spent.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            name: \"deleteButton\",\n            value: transaction.id,\n            onClick: e => {\n              this.submitHandlerDeleteTransaction(e);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }, this);\n    });\n  }\n\n  renderTransactions() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mainTitle\",\n        children: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.setState({\n              showHome: true,\n              showTransactions: false\n            });\n          },\n          className: \"buttons-invariant\",\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-flex\",\n        id: \"dateDropDown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: this.state.selectedMonth,\n          onChange: this.handleSelectedMonthDropDownChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"-1\",\n            children: \"--Month--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this), this.state.listOfMonths.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: element.monthNum,\n            children: element.month\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleSelectedYearDropDownChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            disabled: true,\n            value: \"-1\",\n            children: \"--Year--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() - 4,\n            children: this.state.today.getFullYear() - 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() - 3,\n            children: this.state.today.getFullYear() - 3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() - 2,\n            children: this.state.today.getFullYear() - 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: this.state.today.getFullYear() - 1,\n            children: this.state.today.getFullYear() - 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            value: this.state.today.getFullYear(),\n            children: this.state.today.getFullYear()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: this.handleSortByChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"--Filter/All--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this), this.state.expenses.map(element => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: element.id,\n            children: element.expense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"expense-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Payee\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Spent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Delete()\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderTableData()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderHome() {\n    // const homePage = { \n    //     pathname: \"/home\" + this.state.username, \n    // };\n    const history = createBrowserHistory();\n    history.push('/home/' + this.state.username); //changes address and bottom code changes the rendering\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Home, {\n        username: this.state.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n  componentDidMount() {\n    const pathName = window.location.pathname;\n    const username = pathName.split('/')[2];\n    axios.get(\"http://localhost:8080/transaction/allTransactions\") //getting all transactions in db\n    .then(res => {\n      const transactions = res.data;\n      this.setState({\n        allTransactions: transactions\n      });\n    });\n    axios.get(\"http://localhost:8080/expense/allExpenses\") //getting all expenses in db\n    .then(res => {\n      let userExpenses = res.data.filter(expense => {\n        if (expense.userName === username) {\n          return expense;\n        }\n      });\n      this.setState({\n        expenses: userExpenses\n      }, function () {\n        console.log(\"User Expense\", this.state.expenses);\n      });\n    });\n    const today = new Date();\n    this.setState({\n      selectedMonth: today.getMonth() + 1,\n      selectedYear: today.getFullYear()\n    }, function () {\n      axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth + \"/\" + this.state.selectedYear).then(res => {\n        console.log(res.data);\n        let userTransactions = res.data.filter(transaction => {\n          if (transaction.userName === username) {\n            return transaction;\n          }\n        });\n        console.log(\"users transactions\", userTransactions);\n        this.setState({\n          selectedTransactions: userTransactions,\n          allTransactionsForSelectedDate: userTransactions\n        }, function () {\n          console.log(this.state.selectedTransactions);\n        }); //this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data});\n\n        console.log(\"selectedMOnth\", this.state.selectedMonth);\n        console.log(\"selectedYear\", this.state.selectedYear);\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.showTransactions && this.renderTransactions, this.state.showHome && this.renderHome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/src/Transactions.js"],"names":["React","useState","axios","Link","ThemeProvider","createBrowserHistory","Transactions","Component","constructor","props","state","selectedTransactions","allTransactions","allTransactionsForSelectedDate","expenses","listOfMonths","month","monthNum","selectedMonth","selectedYear","today","Date","showTransactions","showHome","handleSelectedMonthDropDownChange","bind","handleSelectedYearDropDownChange","handleSortByChange","renderTableData","renderTransactions","renderHome","e","selectedElement","target","value","console","log","map","element","parseInt","setState","get","then","res","data","updatedMap","Map","spentValsForAllExpenses","expense","set","id","changingSpentMap","transaction","expenseSpentVal","expenseID","spent","selectionVal","updatedTransactions","filter","submitHandlerDeleteTransaction","delete","response","idOfDeletedTransaction","updatedAllTransactions","updatedallTransactionsForSelectedDate","updatedSelectedTransactions","allTransaction","catch","error","reverse","expenseName","transactionDate","payee","toFixed","pathName","window","location","pathname","username","split","getFullYear","history","push","componentDidMount","transactions","userExpenses","userName","getMonth","userTransactions","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAAQC,oBAAR,QAAmC,SAAnC;;;AAIA,eAAe,MAAMC,YAAN,SAA2BN,KAAK,CAACO,SAAjC,CAA2C;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,oBAAoB,EAAE,EADb;AACmB;AAC5BC,MAAAA,eAAe,EAAE,EAFR;AAEY;AACrBC,MAAAA,8BAA8B,EAAE,EAHvB;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,YAAY,EAAE,CAAC;AAACC,QAAAA,KAAK,EAAC,SAAP;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAD,EAAiC;AAACD,QAAAA,KAAK,EAAC,UAAP;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAjC,EAAkE;AAACD,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAlE,EAAgG;AAACD,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAhG,EAA8H;AAACD,QAAAA,KAAK,EAAC,KAAP;AAAcC,QAAAA,QAAQ,EAAE;AAAxB,OAA9H,EAA0J;AAACD,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,QAAQ,EAAE;AAAzB,OAA1J,EAAuL;AAACD,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,QAAQ,EAAE;AAAzB,OAAvL,EAAoN;AAACD,QAAAA,KAAK,EAAC,QAAP;AAAiBC,QAAAA,QAAQ,EAAE;AAA3B,OAApN,EAAmP;AAACD,QAAAA,KAAK,EAAC,WAAP;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAnP,EAAqR;AAACD,QAAAA,KAAK,EAAC,SAAP;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAArR,EAAsT;AAACD,QAAAA,KAAK,EAAC,UAAP;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAtT,EAAwV;AAACD,QAAAA,KAAK,EAAC,UAAP;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAxV,CALL;AAMTC,MAAAA,aAAa,EAAE,CAAC,CANP;AAOTC,MAAAA,YAAY,EAAE,CAAC,CAPN;AASTC,MAAAA,KAAK,EAAE,IAAIC,IAAJ,EATE;AAWTC,MAAAA,gBAAgB,EAAE,IAXT;AAYTC,MAAAA,QAAQ,EAAE;AAZD,KAAb;AAeA,SAAKC,iCAAL,GAAyC,KAAKA,iCAAL,CAAuCC,IAAvC,CAA4C,IAA5C,CAAzC;AACA,SAAKC,gCAAL,GAAwC,KAAKA,gCAAL,CAAsCD,IAAtC,CAA2C,IAA3C,CAAxC;AACA,SAAKE,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CAA1B;AAEA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBJ,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKK,UAAL,GAAkB,KAAKA,UAAL,CAAgBL,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDD,EAAAA,iCAAiC,CAACO,CAAD,EAAI;AACjC,QAAIC,eAAe,GAAC,CAApB,CADiC,CAEjC;;AACA,QAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,IAAvB,EAA6B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA;AACH,KAHD,MAII;AACA;AAAC,aAAK1B,KAAL,CAAWK,YAAX,CAAwBsB,GAAxB,CAA6BC,OAAD,IAAa;AACtC,cAAIA,OAAO,CAACrB,QAAR,KAAqBsB,QAAQ,CAACR,CAAC,CAACE,MAAF,CAASC,KAAV,CAAjC,EAAmD;AAC/CF,YAAAA,eAAe,GAAGM,OAAO,CAACrB,QAA1B;AACH;AACJ,SAJA;AAIE;AACH,WAAKuB,QAAL,CAAc;AAACtB,QAAAA,aAAa,EAAEc;AAAhB,OAAd,EAAgD,YAAY;AACxD9B,QAAAA,KAAK,CAACuC,GAAN,CAAU,4DAA4D,KAAK/B,KAAL,CAAWQ,aAAvE,GAAsF,GAAtF,GAA2F,KAAKR,KAAL,CAAWS,YAAhH,EACCuB,IADD,CACMC,GAAG,IAAI;AACTR,UAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAiDO,GAAG,CAACC,IAArD;AAEA,cAAIC,UAAU,GAAG,IAAIC,GAAJ,CAAQ,KAAKpC,KAAL,CAAWqC,uBAAnB,CAAjB;AAEA,eAAKrC,KAAL,CAAWI,QAAX,CAAoBuB,GAApB,CAAyBW,OAAD,IAAa;AACjCH,YAAAA,UAAU,CAACI,GAAX,CAAeD,OAAO,CAACE,EAAvB,EAA2B,GAA3B;AACH,WAFD;AAIA,eAAKV,QAAL,CAAc;AAAC7B,YAAAA,oBAAoB,EAAEgC,GAAG,CAACC,IAA3B;AAAiCG,YAAAA,uBAAuB,EAAEF;AAA1D,WAAd,EAAqF,YAAU;AAC3F,gBAAIM,gBAAgB,GAAG,IAAIL,GAAJ,CAAQ,KAAKpC,KAAL,CAAWqC,uBAAnB,CAAvB;AAEA,iBAAKrC,KAAL,CAAWC,oBAAX,CAAgC0B,GAAhC,CAAqCe,WAAD,IAAiB;AACjD,oBAAMC,eAAe,GAAGF,gBAAgB,CAACV,GAAjB,CAAqBW,WAAW,CAACE,SAAjC,CAAxB;AACAH,cAAAA,gBAAgB,CAACF,GAAjB,CAAqBG,WAAW,CAACE,SAAjC,EAA4CD,eAAe,GAAGD,WAAW,CAACG,KAA1E;AAEH,aAJD;AAKA,iBAAKf,QAAL,CAAc;AAACO,cAAAA,uBAAuB,EAAEI;AAA1B,aAAd;AACH,WATD;AAUH,SApBD;AAqBH,OAtBD;AAuBH;AACJ;;AAEDzB,EAAAA,gCAAgC,CAACK,CAAD,EAAI;AAChC,QAAIC,eAAe,GAAC,CAApB,CADgC,CAEhC;;AACA,QAAID,CAAC,CAACE,MAAF,CAASC,KAAT,KAAmB,IAAvB,EAA6B;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AACH,KAHD,MAII;AACAJ,MAAAA,eAAe,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B;AAEA,WAAKM,QAAL,CAAc;AAACrB,QAAAA,YAAY,EAAEa;AAAf,OAAd,EAA+C,YAAY;AACvD9B,QAAAA,KAAK,CAACuC,GAAN,CAAU,4DAA4D,KAAK/B,KAAL,CAAWQ,aAAvE,GAAsF,GAAtF,GAA2F,KAAKR,KAAL,CAAWS,YAAhH,EACCuB,IADD,CACMC,GAAG,IAAI;AACTR,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDO,GAAG,CAACC,IAApD;AAGA,eAAKJ,QAAL,CAAc;AAAC7B,YAAAA,oBAAoB,EAAEgC,GAAG,CAACC,IAA3B;AAAiC/B,YAAAA,8BAA8B,EAAE8B,GAAG,CAACC;AAArE,WAAd,EAA0F,YAAW,CAGpG,CAHD;AAKH,SAVD;AAWH,OAZD;AAaH;AACJ;;AAEDjB,EAAAA,kBAAkB,CAACI,CAAD,EAAI;AAElBI,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BL,CAAC,CAACE,MAAF,CAASC,KAApC;AACA,QAAIsB,YAAY,GAAG,CAAC,CAApB,CAHkB,CAGK;;AAEvB,SAAK9C,KAAL,CAAWI,QAAX,CAAoBuB,GAApB,CAAyBC,OAAD,IAAa;AACzB,UAAIA,OAAO,CAACY,EAAR,KAAeX,QAAQ,CAACR,CAAC,CAACE,MAAF,CAASC,KAAV,CAA3B,EAA6C;AACzCsB,QAAAA,YAAY,GAAGjB,QAAQ,CAACD,OAAO,CAACY,EAAT,CAAvB;AACAf,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAA+BoB,YAA/B;AACH;AACZ,KALD;;AAOA,QAAIA,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACrB,WAAKhB,QAAL,CAAc;AAAC7B,QAAAA,oBAAoB,EAAE,KAAKD,KAAL,CAAWG;AAAlC,OAAd;AACH,KAFD,MAGK;AAGD,YAAM4C,mBAAmB,GAAG,KAAK/C,KAAL,CAAWG,8BAAX,CAA0C6C,MAA1C,CAAkDN,WAAD,IAAiB;AAG1F,YAAIA,WAAW,CAACE,SAAZ,KAA0BE,YAA9B,EAA4C;AACxC,iBAAOJ,WAAP;AACH;AACJ,OAN2B,CAA5B;AAQA,WAAKZ,QAAL,CAAc;AAAC7B,QAAAA,oBAAoB,EAAE8C;AAAvB,OAAd;AACH;AACJ;;AAEDE,EAAAA,8BAA8B,CAAC5B,CAAD,EAAI;AAE9BI,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACE,MAAF,CAASC,KAArB,EAF8B,CAI9B;;AACIhC,IAAAA,KAAK,CAAC0D,MAAN,CAAa,iDAAiD7B,CAAC,CAACE,MAAF,CAASC,KAAvE,EACCQ,IADD,CACMmB,QAAQ,IAAI;AACd,YAAMC,sBAAsB,GAAGD,QAAQ,CAACjB,IAAxC;AAEA,YAAMmB,sBAAsB,GAAG,KAAKrD,KAAL,CAAWE,eAAX,CAA2B8C,MAA3B,CAAmCN,WAAD,IAAiB;AAC9E,YAAIA,WAAW,CAACF,EAAZ,KAAmBY,sBAAvB,EAA+C;AAC3C,iBAAOV,WAAP,CAD2C,CACvB;AACvB;AACJ,OAJ8B,CAA/B;AAMA,YAAMY,qCAAqC,GAAG,KAAKtD,KAAL,CAAWG,8BAAX,CAA0C6C,MAA1C,CAAkDN,WAAD,IAAiB;AAC5G,YAAIA,WAAW,CAACF,EAAZ,KAAmBY,sBAAvB,EAA+C;AAC3C,iBAAOV,WAAP,CAD2C,CACvB;AACvB;AACJ,OAJ6C,CAA9C;AAMA,YAAMa,2BAA2B,GAAG,KAAKvD,KAAL,CAAWC,oBAAX,CAAgC+C,MAAhC,CAAwCN,WAAD,IAAiB;AACxF,YAAIA,WAAW,CAACF,EAAZ,KAAmBY,sBAAvB,EAA+C;AAC3C,iBAAOV,WAAP,CAD2C,CACvB;AACvB;AACJ,OAJmC,CAApC;AAMA,WAAKZ,QAAL,CAAc;AAAC0B,QAAAA,cAAc,EAAEH,sBAAjB;AAAyClD,QAAAA,8BAA8B,EAAEmD,qCAAzE;AAAgHrD,QAAAA,oBAAoB,EAAEsD;AAAtI,OAAd;AACA9B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,QAAZ;AACH,KAxBD,EAwBGM,KAxBH,CAwBSC,KAAK,IAAI;AACdjC,MAAAA,OAAO,CAACC,GAAR,CAAYgC,KAAZ;AACH,KA1BD,EAL0B,CAgC1B;AACJ;AACH;;AAEDxC,EAAAA,eAAe,GAAG;AACd,WAAO,KAAKlB,KAAL,CAAWC,oBAAX,CAAgC0D,OAAhC,GAA0ChC,GAA1C,CAA+Ce,WAAD,IAAiB;AACnE,UAAIkB,WAAJ;AACA,WAAK5D,KAAL,CAAWI,QAAX,CAAoBuB,GAApB,CAAyBW,OAAD,IAAa;AACjC,YAAIA,OAAO,CAACE,EAAR,KAAeE,WAAW,CAACE,SAA/B,EAA0C;AACtCgB,UAAAA,WAAW,GAAGtB,OAAO,CAACA,OAAtB;AACH;AACJ,OAJD;AAKA,0BACG;AAAA,gCACG;AAAA,oBAAKI,WAAW,CAACmB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA,oBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAA,oBAAKlB,WAAW,CAACoB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAHH,eAIG;AAAA,0BAAOpB,WAAW,CAACG,KAAb,CAAoBkB,OAApB,CAA4B,CAA5B,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH,eAKG;AAAA,iCAAI;AAAQ,YAAA,IAAI,EAAC,cAAb;AAA4B,YAAA,KAAK,EAAErB,WAAW,CAACF,EAA/C;AAAmD,YAAA,OAAO,EAAGnB,CAAD,IAAO;AAAC,mBAAK4B,8BAAL,CAAoC5B,CAApC;AAAwC,aAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH;AASF,KAhBM,CAAP;AAkBH;;AAEDF,EAAAA,kBAAkB,GAAG;AACjB,UAAM6C,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAjC;AACA,UAAMC,QAAQ,GAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAjB;AAGA,wBACI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,WAAd;AAAA,kBAA2BD;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAEQ;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAC,iBAAKtC,QAAL,CAAc;AAACjB,cAAAA,QAAQ,EAAE,IAAX;AAAiBD,cAAAA,gBAAgB,EAAE;AAAnC,aAAd;AAAyD,WAAjF;AAAkF,UAAA,SAAS,EAAC,mBAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,EAAE,EAAC,cAAlC;AAAA,gCACI;AAAQ,UAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWQ,aAA1B;AAAyC,UAAA,QAAQ,EAAE,KAAKM,iCAAxD;AAAA,kCACI;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGI,KAAKd,KAAL,CAAWK,YAAX,CAAwBsB,GAAxB,CAA6BC,OAAD,iBACxB;AAAQ,YAAA,KAAK,EAAEA,OAAO,CAACrB,QAAvB;AAAA,sBAAkCqB,OAAO,CAACtB;AAA1C;AAAA;AAAA;AAAA;AAAA,kBADJ,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAQ,UAAA,QAAQ,EAAE,KAAKU,gCAAvB;AAAA,kCACI;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,KAAK,EAAE,KAAKhB,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B,CAA9C;AAAA,sBAAkD,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAQ,YAAA,KAAK,EAAE,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B,CAA9C;AAAA,sBAAkD,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,YAAA,KAAK,EAAE,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B,CAA9C;AAAA,sBAAkD,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAQ,YAAA,KAAK,EAAE,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B,CAA9C;AAAA,sBAAkD,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,KAA+B;AAAjF;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAQ,YAAA,QAAQ,MAAhB;AAAiB,YAAA,KAAK,EAAE,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB,EAAxB;AAAA,sBAAyD,KAAKtE,KAAL,CAAWU,KAAX,CAAiB4D,WAAjB;AAAzD;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,eAgBI;AAAQ,UAAA,QAAQ,EAAE,KAAKrD,kBAAvB;AAAA,kCACQ;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADR,EAES,KAAKjB,KAAL,CAAWI,QAAX,CAAoBuB,GAApB,CAAyBC,OAAD,iBACrB;AAAQ,YAAA,KAAK,EAAEA,OAAO,CAACY,EAAvB;AAAA,sBAA4BZ,OAAO,CAACU;AAApC;AAAA;AAAA;AAAA;AAAA,kBADH,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAiCI;AAAO,QAAA,SAAS,EAAC,eAAjB;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAA,oBACK,KAAKpB,eAAL;AADL;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkDH;;AAEDE,EAAAA,UAAU,GAAG;AACT;AACA;AACA;AAEA,UAAMmD,OAAO,GAAG5E,oBAAoB,EAApC;AACA4E,IAAAA,OAAO,CAACC,IAAR,CAAa,WAAW,KAAKxE,KAAL,CAAWoE,QAAnC,EANS,CAMuC;;AAChD,wBAAQ;AAAA,6BAEJ,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKpE,KAAL,CAAWoE;AAA3B;AAAA;AAAA;AAAA;AAAA;AAFI,qBAAR;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAEhB,UAAMT,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAjC;AACA,UAAMC,QAAQ,GAAGJ,QAAQ,CAACK,KAAT,CAAe,GAAf,EAAoB,CAApB,CAAjB;AAEA7E,IAAAA,KAAK,CAACuC,GAAN,CAAU,mDAAV,EAA+D;AAA/D,KACCC,IADD,CACMC,GAAG,IAAI;AACT,YAAMyC,YAAY,GAAGzC,GAAG,CAACC,IAAzB;AACA,WAAKJ,QAAL,CAAc;AAAC5B,QAAAA,eAAe,EAAEwE;AAAlB,OAAd;AACH,KAJD;AAMAlF,IAAAA,KAAK,CAACuC,GAAN,CAAU,2CAAV,EAAwD;AAAxD,KACCC,IADD,CACMC,GAAG,IAAI;AAET,UAAI0C,YAAY,GAAI1C,GAAG,CAACC,IAAL,CAAWc,MAAX,CAAmBV,OAAD,IAAa;AAC9C,YAAIA,OAAO,CAACsC,QAAR,KAAqBR,QAAzB,EAAmC;AAC/B,iBAAO9B,OAAP;AACH;AACJ,OAJkB,CAAnB;AAKA,WAAKR,QAAL,CAAc;AAAC1B,QAAAA,QAAQ,EAAEuE;AAAX,OAAd,EAAwC,YAAW;AAC/ClD,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2B,KAAK1B,KAAL,CAAWI,QAAtC;AACH,OAFD;AAKH,KAbD;AAeA,UAAMM,KAAK,GAAG,IAAIC,IAAJ,EAAd;AACA,SAAKmB,QAAL,CAAc;AAACtB,MAAAA,aAAa,EAAEE,KAAK,CAACmE,QAAN,KAAiB,CAAjC;AAAoCpE,MAAAA,YAAY,EAAEC,KAAK,CAAC4D,WAAN;AAAlD,KAAd,EAAsF,YAAY;AAC9F9E,MAAAA,KAAK,CAACuC,GAAN,CAAU,4DAA4D,KAAK/B,KAAL,CAAWQ,aAAvE,GAAsF,GAAtF,GAA2F,KAAKR,KAAL,CAAWS,YAAhH,EACKuB,IADL,CACUC,GAAG,IAAI;AACTR,QAAAA,OAAO,CAACC,GAAR,CAAYO,GAAG,CAACC,IAAhB;AAKA,YAAI4C,gBAAgB,GAAI7C,GAAG,CAACC,IAAL,CAAWc,MAAX,CAAmBN,WAAD,IAAiB;AACtD,cAAIA,WAAW,CAACkC,QAAZ,KAAyBR,QAA7B,EAAuC;AACnC,mBAAO1B,WAAP;AACH;AACJ,SAJsB,CAAvB;AAKAjB,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCoD,gBAAlC;AACA,aAAKhD,QAAL,CAAc;AAAC7B,UAAAA,oBAAoB,EAAE6E,gBAAvB;AAAyC3E,UAAAA,8BAA8B,EAAE2E;AAAzE,SAAd,EAA0G,YAAW;AACjHrD,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK1B,KAAL,CAAWC,oBAAvB;AACH,SAFD,EAZS,CAgBT;;AACAwB,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAK1B,KAAL,CAAWQ,aAAxC;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK1B,KAAL,CAAWS,YAAvC;AACH,OApBL;AAsBH,KAvBD;AAyBH;;AAEDsE,EAAAA,MAAM,GAAG;AAEL,wBAAO;AAAA,6BACH;AAAA,mBACK,KAAK/E,KAAL,CAAWY,gBAAX,IAA+B,KAAKO,kBADzC,EAEK,KAAKnB,KAAL,CAAWa,QAAX,IAAuB,KAAKO,UAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AADG,qBAAP;AAOH;;AAxTqD","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport { ThemeProvider } from 'react-bootstrap';\r\nimport {createBrowserHistory} from \"history\";\r\n\r\n\r\n\r\nexport default class Transactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTransactions: [],   //selected trans\r\n            allTransactions: [], //all transactions\r\n            allTransactionsForSelectedDate: [],\r\n            expenses: [],\r\n            listOfMonths: [{month:\"January\", monthNum: 1}, {month:\"February\", monthNum: 2}, {month:\"March\", monthNum: 3}, {month:\"April\", monthNum: 4}, {month:\"May\", monthNum: 5}, {month:\"June\", monthNum: 6}, {month:\"July\", monthNum: 7}, {month:\"August\", monthNum: 8}, {month:\"September\", monthNum: 9}, {month:\"October\", monthNum: 10}, {month:\"November\", monthNum: 11}, {month:\"December\", monthNum: 12}],\r\n            selectedMonth: -1,\r\n            selectedYear: -1,\r\n            \r\n            today: new Date(),\r\n\r\n            showTransactions: true,\r\n            showHome: false\r\n        };\r\n\r\n        this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\r\n        this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n\r\n        this.renderTableData = this.renderTableData.bind(this);\r\n        this.renderTransactions = this.renderTransactions.bind(this);\r\n        this.renderHome = this.renderHome.bind(this);\r\n    }\r\n\r\n    handleSelectedMonthDropDownChange(e) {\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No month selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            {this.state.listOfMonths.map((element) => {\r\n                if (element.monthNum === parseInt(e.target.value)) {\r\n                    selectedElement = element.monthNum;\r\n                }\r\n            })}\r\n            this.setState({selectedMonth: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(\"newTransactionDate(MonthChange): \", res.data);\r\n                    \r\n                    let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n\r\n                    this.state.expenses.map((expense) => {\r\n                        updatedMap.set(expense.id, 0.0);\r\n                    })\r\n                    \r\n                    this.setState({selectedTransactions: res.data, spentValsForAllExpenses: updatedMap}, function(){\r\n                        let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\r\n                        \r\n                        this.state.selectedTransactions.map((transaction) => {\r\n                            const expenseSpentVal = changingSpentMap.get(transaction.expenseID)\r\n                            changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                \r\n                        })\r\n                        this.setState({spentValsForAllExpenses: changingSpentMap})\r\n                    })\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSelectedYearDropDownChange(e) {\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No Year selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            selectedElement = e.target.value;\r\n            \r\n            this.setState({selectedYear: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(\"newTransactionDate(YearChange): \" ,res.data);\r\n                    \r\n        \r\n                    this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data}, function() {\r\n                        \r\n                        \r\n                    });\r\n                    \r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSortByChange(e) {\r\n        \r\n        console.log(\"e.target.val\",e.target.value)\r\n        let selectionVal = -1; //temp var\r\n\r\n        this.state.expenses.map((element) => {\r\n                    if (element.id === parseInt(e.target.value)) {\r\n                        selectionVal = parseInt(element.id);\r\n                        console.log(\"myselectionVal: \",selectionVal)\r\n                    }\r\n        });\r\n\r\n        if (selectionVal === -1) {\r\n            this.setState({selectedTransactions: this.state.allTransactionsForSelectedDate})\r\n        }\r\n        else {\r\n            \r\n            \r\n            const updatedTransactions = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                \r\n                \r\n                if (transaction.expenseID === selectionVal) {\r\n                    return transaction;\r\n                }\r\n            })\r\n\r\n            this.setState({selectedTransactions: updatedTransactions})\r\n        }\r\n    }\r\n\r\n    submitHandlerDeleteTransaction(e) {\r\n        \r\n        console.log(e.target.value)\r\n        \r\n        //if (this.state.deleteConfirmVal) {\r\n            axios.delete('http://localhost:8080/transaction/deleteRow/' + e.target.value)\r\n            .then(response => {\r\n                const idOfDeletedTransaction = response.data;\r\n                \r\n                const updatedAllTransactions = this.state.allTransactions.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n                \r\n                const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n\r\n                const updatedSelectedTransactions = this.state.selectedTransactions.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n\r\n                this.setState({allTransaction: updatedAllTransactions, allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate, selectedTransactions: updatedSelectedTransactions});\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            }) \r\n            //window.location.reload();  \r\n        //}\r\n    }\r\n\r\n    renderTableData() {\r\n        return this.state.selectedTransactions.reverse().map((transaction) => {\r\n           let expenseName;\r\n           this.state.expenses.map((expense) => {\r\n               if (expense.id === transaction.expenseID) {\r\n                   expenseName = expense.expense;\r\n               }\r\n           })\r\n           return (\r\n              <tr>\r\n                 <td>{transaction.transactionDate}</td>\r\n                 <td>{expenseName}</td>\r\n                 <td>{transaction.payee}</td>\r\n                 <td>${(transaction.spent).toFixed(2)}</td>\r\n                 <td><button name=\"deleteButton\" value={transaction.id} onClick={(e) => {this.submitHandlerDeleteTransaction(e);}}>Delete</button></td>\r\n              </tr>\r\n           )\r\n        })\r\n        \r\n    }\r\n\r\n    renderTransactions() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        \r\n        return (\r\n            <div>\r\n                <h1 className=\"mainTitle\">{username}</h1>\r\n                <div>\r\n                    {/* <Link to=\"/\"> */}\r\n                        <button onClick={() => {this.setState({showHome: true, showTransactions: false})}}className=\"buttons-invariant\">Go Back</button>\r\n                    {/* </Link> */}\r\n                </div>\r\n                \r\n                <div className=\"dropdown-flex\" id=\"dateDropDown\">\r\n                    <select value={this.state.selectedMonth} onChange={this.handleSelectedMonthDropDownChange}>\r\n                        <option disabled value=\"-1\">--Month--</option>\r\n                        {\r\n                        this.state.listOfMonths.map((element) => (\r\n                            <option value={element.monthNum}>{element.month}</option>\r\n                        ))}\r\n                    </select>\r\n                    <select onChange={this.handleSelectedYearDropDownChange}>\r\n                        <option disabled value=\"-1\">--Year--</option>\r\n                        <option value={this.state.today.getFullYear()-4}>{this.state.today.getFullYear()-4}</option>\r\n                        <option value={this.state.today.getFullYear()-3}>{this.state.today.getFullYear()-3}</option>\r\n                        <option value={this.state.today.getFullYear()-2}>{this.state.today.getFullYear()-2}</option>\r\n                        <option value={this.state.today.getFullYear()-1}>{this.state.today.getFullYear()-1}</option>\r\n                        <option selected value={this.state.today.getFullYear()}>{this.state.today.getFullYear()}</option>\r\n                    </select>\r\n                    <select onChange={this.handleSortByChange}>\r\n                            <option value=\"All\">--Filter/All--</option>\r\n                            {this.state.expenses.map((element) => (\r\n                                <option value={element.id}>{element.expense}</option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n                \r\n                \r\n                <table className=\"expense-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Date</th>\r\n                            <th>Category</th>\r\n                            <th>Payee</th>\r\n                            <th>Spent</th>\r\n                            <th>Delete()</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderTableData()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderHome() {\r\n        // const homePage = { \r\n        //     pathname: \"/home\" + this.state.username, \r\n        // };\r\n        \r\n        const history = createBrowserHistory();\r\n        history.push('/home/' + this.state.username);   //changes address and bottom code changes the rendering\r\n        return (<>\r\n            {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n            <Home username={this.state.username}/>\r\n        </>)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        axios.get(\"http://localhost:8080/transaction/allTransactions\") //getting all transactions in db\r\n        .then(res => { \r\n            const transactions = res.data;\r\n            this.setState({allTransactions: transactions});\r\n        })\r\n\r\n        axios.get(\"http://localhost:8080/expense/allExpenses\")  //getting all expenses in db\r\n        .then(res => {\r\n\r\n            let userExpenses = (res.data).filter((expense) => {\r\n                if (expense.userName === username) {\r\n                    return expense;\r\n                }\r\n            })\r\n            this.setState({expenses: userExpenses}, function() {\r\n                console.log(\"User Expense\",this.state.expenses)\r\n            });\r\n            \r\n            \r\n        })\r\n        \r\n        const today = new Date();\r\n        this.setState({selectedMonth: today.getMonth()+1, selectedYear: today.getFullYear()}, function () {\r\n            axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    \r\n                    \r\n                    \r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    console.log(\"users transactions\", userTransactions)\r\n                    this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions}, function() {\r\n                        console.log(this.state.selectedTransactions)\r\n                    });\r\n                    \r\n                    //this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data});\r\n                    console.log(\"selectedMOnth\", this.state.selectedMonth)\r\n                    console.log(\"selectedYear\", this.state.selectedYear)\r\n                })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return(<>\r\n            <div>\r\n                {this.state.showTransactions && this.renderTransactions}\r\n                {this.state.showHome && this.renderHome}\r\n            </div>\r\n        </>)\r\n        \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}