{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.declare = declare;\n\nfunction declare(builder) {\n  return (api, options, dirname) => {\n    var _clonedApi2;\n\n    let clonedApi;\n\n    for (const name of Object.keys(apiPolyfills)) {\n      var _clonedApi;\n\n      if (api[name]) continue;\n      clonedApi = (_clonedApi = clonedApi) != null ? _clonedApi : copyApiObject(api);\n      clonedApi[name] = apiPolyfills[name](clonedApi);\n    }\n\n    return builder((_clonedApi2 = clonedApi) != null ? _clonedApi2 : api, options || {}, dirname);\n  };\n}\n\nconst apiPolyfills = {\n  assertVersion: api => range => {\n    throwVersionError(range, api.version);\n  },\n  targets: () => () => {\n    return {};\n  },\n  assumption: () => () => {}\n};\n\nfunction copyApiObject(api) {\n  let proto = null;\n\n  if (typeof api.version === \"string\" && /^7\\./.test(api.version)) {\n    proto = Object.getPrototypeOf(api);\n\n    if (proto && (!has(proto, \"version\") || !has(proto, \"transform\") || !has(proto, \"template\") || !has(proto, \"types\"))) {\n      proto = null;\n    }\n  }\n\n  return Object.assign({}, proto, api);\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction throwVersionError(range, version) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n\n    range = `^${range}.0.0-0`;\n  }\n\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    Error.stackTraceLimit = 25;\n  }\n\n  let err;\n\n  if (version.slice(0, 2) === \"7.\") {\n    err = new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${version}\". ` + `You'll need to update your @babel/core version.`);\n  } else {\n    err = new Error(`Requires Babel \"${range}\", but was loaded with \"${version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n  }\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version,\n    range\n  });\n}","map":{"version":3,"sources":["C:/Users/jason/OneDrive/desktop/BudgetTracker/react/node_modules/@babel/helper-plugin-utils/lib/index.js"],"names":["Object","defineProperty","exports","value","declare","builder","api","options","dirname","_clonedApi2","clonedApi","name","keys","apiPolyfills","_clonedApi","copyApiObject","assertVersion","range","throwVersionError","version","targets","assumption","proto","test","getPrototypeOf","has","assign","obj","key","prototype","hasOwnProperty","call","Number","isInteger","Error","limit","stackTraceLimit","err","slice","code"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.declare = declare;\n\nfunction declare(builder) {\n  return (api, options, dirname) => {\n    var _clonedApi2;\n\n    let clonedApi;\n\n    for (const name of Object.keys(apiPolyfills)) {\n      var _clonedApi;\n\n      if (api[name]) continue;\n      clonedApi = (_clonedApi = clonedApi) != null ? _clonedApi : copyApiObject(api);\n      clonedApi[name] = apiPolyfills[name](clonedApi);\n    }\n\n    return builder((_clonedApi2 = clonedApi) != null ? _clonedApi2 : api, options || {}, dirname);\n  };\n}\n\nconst apiPolyfills = {\n  assertVersion: api => range => {\n    throwVersionError(range, api.version);\n  },\n  targets: () => () => {\n    return {};\n  },\n  assumption: () => () => {}\n};\n\nfunction copyApiObject(api) {\n  let proto = null;\n\n  if (typeof api.version === \"string\" && /^7\\./.test(api.version)) {\n    proto = Object.getPrototypeOf(api);\n\n    if (proto && (!has(proto, \"version\") || !has(proto, \"transform\") || !has(proto, \"template\") || !has(proto, \"types\"))) {\n      proto = null;\n    }\n  }\n\n  return Object.assign({}, proto, api);\n}\n\nfunction has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nfunction throwVersionError(range, version) {\n  if (typeof range === \"number\") {\n    if (!Number.isInteger(range)) {\n      throw new Error(\"Expected string or integer value.\");\n    }\n\n    range = `^${range}.0.0-0`;\n  }\n\n  if (typeof range !== \"string\") {\n    throw new Error(\"Expected string or integer value.\");\n  }\n\n  const limit = Error.stackTraceLimit;\n\n  if (typeof limit === \"number\" && limit < 25) {\n    Error.stackTraceLimit = 25;\n  }\n\n  let err;\n\n  if (version.slice(0, 2) === \"7.\") {\n    err = new Error(`Requires Babel \"^7.0.0-beta.41\", but was loaded with \"${version}\". ` + `You'll need to update your @babel/core version.`);\n  } else {\n    err = new Error(`Requires Babel \"${range}\", but was loaded with \"${version}\". ` + `If you are sure you have a compatible version of @babel/core, ` + `it is likely that something in your build process is loading the ` + `wrong version. Inspect the stack trace of this error to look for ` + `the first entry that doesn't mention \"@babel/core\" or \"babel-core\" ` + `to see what is calling Babel.`);\n  }\n\n  if (typeof limit === \"number\") {\n    Error.stackTraceLimit = limit;\n  }\n\n  throw Object.assign(err, {\n    code: \"BABEL_VERSION_UNSUPPORTED\",\n    version,\n    range\n  });\n}"]},"metadata":{},"sourceType":"script"}