[{"C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\index.js":"1","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\App.js":"2","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\reportWebVitals.js":"3","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Home.js":"4","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\AddExpenseForm.js":"5","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\DeleteExpenseForm.js":"6","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\EditExpenseForm.js":"7","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\AddTransactionForm.js":"8","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Transactions.js":"9","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\NavBar.js":"10","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Register.js":"11","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Login.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":974,"mtime":1640206531820,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":25994,"mtime":1640218009890,"results":"17","hashOfConfig":"14"},{"size":1335,"mtime":1638150823239,"results":"18","hashOfConfig":"14"},{"size":1200,"mtime":1638150823250,"results":"19","hashOfConfig":"14"},{"size":2062,"mtime":1638516001734,"results":"20","hashOfConfig":"14"},{"size":1743,"mtime":1638150823242,"results":"21","hashOfConfig":"14"},{"size":16007,"mtime":1640216388053,"results":"22","hashOfConfig":"14"},{"size":334,"mtime":1638945140662,"results":"23","hashOfConfig":"14"},{"size":5291,"mtime":1640216004818,"results":"24","hashOfConfig":"14"},{"size":5456,"mtime":1640218813654,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1w8zdsh",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":34,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\index.js",[],["60","61"],"C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\App.js",["62","63","64"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport Home from './Home';\r\nimport React from 'react';\r\nimport { render } from '@testing-library/react';\r\nimport {BrowserRouter, Routes, Route, Link} from \"react-router-dom\";\r\nimport Transactions from './Transactions';\r\nimport Register from './Register';\r\nimport Login from './Login'\r\n\r\nexport default class App extends React.Component {\r\n  state = {\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <BrowserRouter>\r\n            <Routes>\r\n              <Route exact path=\"/home/:username\" element={<Home auth={false} />}/>\r\n              <Route exact path=\"/transactionsTable/:username\" element={<Transactions/>}/>\r\n              <Route exact path=\"/registerPage\" element={<Register/>}/>\r\n              <Route exact path=\"/\" element={<Login/>}/>\r\n            </Routes>\r\n          </BrowserRouter>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\reportWebVitals.js",[],"C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Home.js",["65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport AddExpenseForm from './AddExpenseForm';\r\nimport DeleteExpenseForm from './DeleteExpenseForm';\r\nimport EditExpenseForm from './EditExpenseForm';\r\nimport AddTransactionForm from './AddTransactionForm';\r\nimport Transactions from './Transactions';\r\nimport NavBar from './NavBar';\r\nimport {Link} from \"react-router-dom\";\r\nimport Moment from 'moment';\r\nimport {createBrowserHistory} from \"history\";\r\nimport Login from './Login';\r\n\r\n\r\nexport default class Home extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \r\n            expenses: [],\r\n            editDropDownSelection:0,\r\n            transactionDropDownSelection:0,\r\n\r\n            addExpenseToggle: false,\r\n            addTransactionToggle: false,\r\n            deleteExpenseToggle: false,\r\n            deleteConfirmVal: false,\r\n            editExpenseToggle: false,\r\n\r\n            selectedTransactions: [],\r\n            listOfMonths: [{month:\"January\", monthNum: 1}, {month:\"February\", monthNum: 2}, {month:\"March\", monthNum: 3}, {month:\"April\", monthNum: 4}, {month:\"May\", monthNum: 5}, {month:\"June\", monthNum: 6}, {month:\"July\", monthNum: 7}, {month:\"August\", monthNum: 8}, {month:\"September\", monthNum: 9}, {month:\"October\", monthNum: 10}, {month:\"November\", monthNum: 11}, {month:\"December\", monthNum: 12}],\r\n            selectedMonth: -1,\r\n            selectedYear: -1,\r\n            \r\n            today: new Date(),\r\n            spentValsForAllExpenses: new Map(),\r\n\r\n            showHome: true,\r\n            showTransactions: false,\r\n            showLogin: false\r\n\r\n        };\r\n\r\n        this.toggleAddExpenseModal = this.toggleAddExpenseModal.bind(this);\r\n        this.toggleAddTransactionModal = this.toggleAddTransactionModal.bind(this)\r\n        this.toggleDeleteExpenseModal = this.toggleDeleteExpenseModal.bind(this);\r\n        this.toggleEditExpenseModal = this.toggleEditExpenseModal.bind(this);\r\n        \r\n        this.handleConfirmDelete = this.handleConfirmDelete.bind(this);\r\n        this.handleEditDropDownChange = this.handleEditDropDownChange.bind(this);\r\n        this.handleTransactionDropDownChange = this.handleTransactionDropDownChange.bind(this);\r\n        this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\r\n        this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\r\n\r\n        this.initEditDropDown = this.initEditDropDown.bind(this);\r\n        this.initTransactionDropDown = this.initTransactionDropDown.bind(this);\r\n        this.submitHandlerEditExpense = this.submitHandlerEditExpense.bind(this);\r\n        this.signOut = this.signOut.bind(this);\r\n        this.signOutsetState = this.signOutsetState.bind(this);\r\n        //this.showTransactions = this.showTransactions.bind(this);\r\n        //this.listOfMonths = this.listOfMonths.bind(this);\r\n        \r\n    }\r\n\r\n    submitHandlerAddExpense = e => {\r\n        e.preventDefault();\r\n\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n\r\n        axios.post(\"http://localhost:8080/expense/addRow\",{\r\n            expense: e.target[0].value,\r\n            budget: e.target[1].value,\r\n            userName: username\r\n        }).then(response => {\r\n            \r\n            const newId = response.data;\r\n            const newExpense = e.target[0].value;\r\n            const newBudget = parseFloat(e.target[1].value);\r\n            \r\n            console.log(\"Expense: \" + e.target[0].value + \"\\n\" + \"Budget: \" + e.target[1].value + \"\\n\" + \"Assigned ID: \" + response.data)\r\n            const newExpenseObject = {\r\n                id: newId,\r\n                expense: newExpense,\r\n                budget: newBudget,\r\n                spent: 0.0,\r\n                remaining: newBudget,\r\n                userName: username\r\n            }\r\n            \r\n            this.setState({\r\n                expenses: [...this.state.expenses, newExpenseObject]\r\n            }, function() {\r\n                let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n                updatedMap.set(newExpenseObject.id, 0.0);\r\n                this.setState({spentValsForAllExpenses: updatedMap});\r\n                e.target[0].value = null;\r\n                e.target[1].value = null;\r\n            })\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })  \r\n        //window.location.reload(); \r\n    }\r\n\r\n    submitHandlerAddTransaction = e => {\r\n        e.preventDefault();\r\n\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        const today = Moment(new Date()).format('YYYY-MM-DD');\r\n        console.log('test', Moment(today).format('YYYY-MM-DD'));\r\n        // const todayYear = today.getFullYear()\r\n        // const todayMonth = today.getMonth()+1\r\n        // const todayDay = today.getDate()\r\n        \r\n        let expenseSpent;\r\n        let nameOfExpense; \r\n        this.state.expenses.filter((element) => {\r\n            if (element.id === this.state.transactionDropDownSelection) {\r\n                nameOfExpense = element.expense;\r\n                expenseSpent = element.spent;\r\n            }\r\n        })\r\n\r\n        axios.post(\"http://localhost:8080/transaction/addRow\",{\r\n            expenseID: this.state.transactionDropDownSelection,\r\n            payee: e.target[1].value,\r\n            spent: parseFloat(e.target[2].value),\r\n            expenseValue: nameOfExpense, \r\n            transactionDate: today,\r\n            userName: username\r\n        }).then(response => {\r\n            console.log(response)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        const updateData = {\r\n            spent: expenseSpent + parseFloat(e.target[2].value)\r\n        }\r\n\r\n        axios.patch('http://localhost:8080/expense/editSpent/' + this.state.transactionDropDownSelection, updateData)\r\n        \r\n        let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n        let targetID;\r\n        this.state.expenses.map((expense) => {\r\n            console.log(\"dropdownselection\",this.state.transactionDropDownSelection)\r\n            if (expense.id === this.state.transactionDropDownSelection) {\r\n                targetID = expense.id;\r\n                console.log(\"targetID\",targetID)\r\n            }\r\n        })\r\n\r\n        this.state.expenses.map((expense) => {\r\n            if (expense.id === targetID) {\r\n                console.log(\"in here\");\r\n                updatedMap.set(expense.id, updatedMap.get(expense.id) + parseFloat(e.target[2].value))\r\n                console.log(updatedMap.get(expense.id));\r\n            }\r\n        })\r\n\r\n        const updatedExpenses = this.state.expenses.filter( (element) => {\r\n            if (element.id === this.state.transactionDropDownSelection) {\r\n                element.spent = expenseSpent + parseFloat(e.target[2].value)\r\n                return element;\r\n            }\r\n            else {\r\n                return element;\r\n            }\r\n        })\r\n\r\n        this.setState({expenses: updatedExpenses, spentValsForAllExpenses: updatedMap})\r\n        e.target[1].value = null;\r\n        e.target[2].value = null;\r\n    }\r\n\r\n    handleConfirmDelete(element){\r\n        // Update the document title using the browser API\r\n        element = true;\r\n    }\r\n    submitHandlerDeleteExpense (e) {\r\n        //this.setState({id: e.target.value}) // value = expense id\r\n        console.log(e.target.value)\r\n        \r\n        //if (this.state.deleteConfirmVal) {\r\n            axios.delete('http://localhost:8080/expense/deleteRow/' + e.target.value)\r\n            .then(response => {\r\n                const idOfDeletedExpense = response.data;\r\n                const updatedExpenses = this.state.expenses.filter((expense) => {\r\n                    if (expense.id !== idOfDeletedExpense) {\r\n                        return expense; // fix syntax\r\n                    }\r\n                });\r\n                this.setState({expenses: updatedExpenses});\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            }) \r\n\r\n            axios.delete('http://localhost:8080/transaction/deleteExpenseTransactions/' + e.target.value)\r\n            .then(response => {\r\n                const idOfExpense = response.data;\r\n                const updatedTransactions = this.state.selectedTransactions.filter((transaction) => {\r\n                    if (transaction.expenseID !== idOfExpense) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n                this.setState({selectedTransactions: updatedTransactions});\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            }) \r\n            //window.location.reload();  \r\n        //}\r\n    }\r\n\r\n    submitHandlerEditExpense (e) {\r\n        e.preventDefault();\r\n        //console.log(e);\r\n\r\n        const data = {\r\n            expense: e.target[1].value,\r\n            budget: parseFloat(e.target[2].value)\r\n        }\r\n        axios.patch('http://localhost:8080/expense/editRow/' + this.state.editDropDownSelection, data)\r\n        .then(response => {\r\n            console.log(response)\r\n            const idOfEditedExpense = response.data;\r\n            const updatedExpenses = this.state.expenses.filter((element) => {\r\n                if (element.id !== idOfEditedExpense) {\r\n                    return element;\r\n                }\r\n                else{\r\n                    element.expense = e.target[1].value;\r\n                    element.budget = parseFloat(e.target[2].value);\r\n                    return element;\r\n                }\r\n                \r\n            })\r\n            this.setState({expenses: updatedExpenses});\r\n            \r\n            e.target[1].value = null;\r\n            e.target[2].value = null;\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        \r\n    }\r\n\r\n    initEditDropDown() {\r\n        let lowestIndexExpense = -1;\r\n        {this.state.expenses.map((element) => {\r\n            if (lowestIndexExpense === -1) {\r\n                lowestIndexExpense = element.id;\r\n            }\r\n            else {\r\n                if (element.id < lowestIndexExpense) {\r\n                    lowestIndexExpense = element.id;\r\n                }\r\n            }\r\n        })}\r\n        \r\n        let elementWithSmallestIndex = \"\";\r\n        {this.state.expenses.map((element) => {\r\n            if (element.id === lowestIndexExpense) {\r\n                elementWithSmallestIndex = element.id;\r\n            }\r\n        })}\r\n\r\n        this.setState({editDropDownSelection: elementWithSmallestIndex});\r\n    }\r\n    handleEditDropDownChange(e) {\r\n        //console.log(e);\r\n        let selectedElement=0;\r\n        {this.state.expenses.map((element) => {\r\n            if (element.expense === e.target.value) {\r\n                selectedElement = element.id;\r\n            }\r\n        })}\r\n        this.setState({ editDropDownSelection: selectedElement });\r\n    }\r\n\r\n    initTransactionDropDown() {\r\n        let lowestIndexExpense = -1;\r\n        {this.state.expenses.map((element) => {\r\n            if (lowestIndexExpense === -1) {\r\n                lowestIndexExpense = element.id;\r\n            }\r\n            else {\r\n                if (element.id < lowestIndexExpense) {\r\n                    lowestIndexExpense = element.id;\r\n                }\r\n            }\r\n        })}\r\n        \r\n        let elementWithSmallestIndex = \"\";\r\n        {this.state.expenses.map((element) => {\r\n            if (element.id === lowestIndexExpense) {\r\n                elementWithSmallestIndex = element.id;\r\n            }\r\n        })}\r\n\r\n        this.setState({transactionDropDownSelection: elementWithSmallestIndex});\r\n    }\r\n    handleTransactionDropDownChange(e) {\r\n        let selectedElement=0;\r\n        {this.state.expenses.map((element) => {\r\n            if (element.expense === e.target.value) {\r\n                selectedElement = element.id;\r\n            }\r\n        })}\r\n        this.setState({ transactionDropDownSelection: selectedElement });\r\n    }\r\n\r\n    handleSelectedMonthDropDownChange(e) {\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No month selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            {this.state.listOfMonths.map((element) => {\r\n                if (element.monthNum === parseInt(e.target.value)) {\r\n                    selectedElement = element.monthNum;\r\n                }\r\n            })}\r\n            this.setState({selectedMonth: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(\"newTransactionDate(MonthChange): \", res.data);\r\n                    \r\n                    let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n\r\n                    this.state.expenses.map((expense) => {\r\n                        updatedMap.set(expense.id, 0.0);\r\n                    })\r\n                    \r\n                    this.setState({selectedTransactions: res.data, spentValsForAllExpenses: updatedMap}, function(){\r\n                        let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\r\n                        \r\n                        this.state.selectedTransactions.map((transaction) => {\r\n                            const expenseSpentVal = changingSpentMap.get(transaction.expenseID)\r\n                            changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                \r\n                        })\r\n                        this.setState({spentValsForAllExpenses: changingSpentMap})\r\n                    })\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSelectedYearDropDownChange(e) {\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No Year selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            selectedElement = e.target.value;\r\n            \r\n            this.setState({selectedYear: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(\"newTransactionDate(YearChange): \" ,res.data);\r\n\r\n                    let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n                                       \r\n                    this.state.expenses.map((expense) => {\r\n                        updatedMap.set(expense.id, 0.0);\r\n                    })\r\n                    \r\n        \r\n                    this.setState({selectedTransactions: res.data, spentValsForAllExpenses: updatedMap}, function() {\r\n                        let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\r\n                        \r\n                        this.state.selectedTransactions.map((transaction) => {\r\n                            const expenseSpentVal = changingSpentMap.get(transaction.expenseID)\r\n                            changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                \r\n                        })\r\n                        this.setState({spentValsForAllExpenses: changingSpentMap})\r\n                    });\r\n                    \r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    toggleAddExpenseModal() {\r\n        this.setState({addExpenseToggle : !this.state.addExpenseToggle});\r\n    }\r\n    toggleAddTransactionModal() {\r\n        this.setState({addTransactionToggle: !this.state.addTransactionToggle});\r\n    }\r\n    toggleDeleteExpenseModal() {\r\n        this.setState({deleteExpenseToggle : !this.state.deleteExpenseToggle});\r\n    }\r\n    toggleEditExpenseModal() {\r\n        this.setState({editExpenseToggle: !this.state.editExpenseToggle});\r\n    }\r\n\r\n    renderTableData() {\r\n\r\n        return this.state.expenses.map((element) => {\r\n            \r\n           const amountSpent = parseFloat(this.state.spentValsForAllExpenses.get(element.id));\r\n           //console.log(amountSpent);\r\n           return (\r\n              <tr>\r\n                 <td>{element.expense}</td>\r\n                 <td>${(element.budget).toFixed(2)}</td>\r\n                 <td>${(amountSpent).toFixed(2)}</td>\r\n                 <td>${(element.budget-amountSpent).toFixed(2)}</td>\r\n                 <td><button name=\"deleteButton\" value={element.id} onClick={(e) => {this.submitHandlerDeleteExpense(e);this.toggleDeleteExpenseModal()}}>Delete</button></td>\r\n              </tr>\r\n           )\r\n        })\r\n        \r\n    }\r\n\r\n    signOut() {\r\n        console.log(\"signed OUt\")\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        localStorage.setItem(\"auth\", false);\r\n\r\n\r\n        const history = createBrowserHistory();\r\n        history.push('/');   //changes address and bottom code changes the rendering\r\n        return (<>\r\n            {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n            <Login />\r\n        </>)\r\n    }\r\n    signOutsetState() {\r\n        this.setState({showLogin: true, showHome: false, showTransactions: false});\r\n    }\r\n\r\n    renderHome() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n\r\n        if (localStorage.getItem(\"auth\") === \"authenticated\") {\r\n        \r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <h1 className=\"mainTitle\">My Expenses</h1>\r\n                        </div>\r\n                        <div id=\"signedInUser\">{\"Signed In User: \" + username}</div>\r\n        \r\n                        <div>\r\n                            <button id=\"signOut-button\" onClick={() => {this.signOutsetState()}}>Sign Out</button>\r\n                        </div>\r\n                        <div className=\"buttons-flex\">\r\n                            <button type=\"button\" class=\"btn btn-danger\" onClick={this.toggleAddExpenseModal}>Add Expense</button>\r\n                            <button onClick={ () => {this.toggleAddTransactionModal();this.initTransactionDropDown();}}>Add Transaction</button>\r\n                            <button onClick={ () => {this.toggleEditExpenseModal();this.initEditDropDown();}}>Edit Expense</button>\r\n                            {/* <Link to={transactionsPage} > */}\r\n                                <button className=\"buttons-flex\" onClick={() => {this.setState({showHome: false, showTransactions:true})}}>Show Transactions</button>\r\n                            {/* </Link> */}\r\n                        </div>\r\n                        <AddExpenseForm  handleClose={this.toggleAddExpenseModal} show={this.state.addExpenseToggle} submitHandler={this.submitHandlerAddExpense}/>\r\n                        <EditExpenseForm myList={this.state.expenses} handleClose={this.toggleEditExpenseModal} handleChange={this.handleEditDropDownChange} show={this.state.editExpenseToggle} submitHandler={this.submitHandlerEditExpense}/>\r\n                        <AddTransactionForm  myList={this.state.expenses} handleClose={this.toggleAddTransactionModal} show={this.state.addTransactionToggle} submitHandler={this.submitHandlerAddTransaction} handleChange={this.handleTransactionDropDownChange}/>\r\n                        \r\n                        <div className=\"dropdown-flex\" id=\"dateDropDown\">\r\n                            <select value={this.state.selectedMonth} onChange={this.handleSelectedMonthDropDownChange}>\r\n                                <option disabled value=\"-1\">--Month--</option>\r\n                                {\r\n                                this.state.listOfMonths.map((element) => (\r\n                                    <option value={element.monthNum}>{element.month}</option>\r\n                                ))}\r\n                            </select>\r\n                            <select onChange={this.handleSelectedYearDropDownChange}>\r\n                                <option disabled value=\"-1\">--Year--</option>\r\n                                <option value={this.state.today.getFullYear()-4}>{this.state.today.getFullYear()-4}</option>\r\n                                <option value={this.state.today.getFullYear()-3}>{this.state.today.getFullYear()-3}</option>\r\n                                <option value={this.state.today.getFullYear()-2}>{this.state.today.getFullYear()-2}</option>\r\n                                <option value={this.state.today.getFullYear()-1}>{this.state.today.getFullYear()-1}</option>\r\n                                <option selected value={this.state.today.getFullYear()}>{this.state.today.getFullYear()}</option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                        <table className=\"expense-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Expense</th>\r\n                                    <th>Budget</th>\r\n                                    <th>Spent</th>\r\n                                    <th>Remaining</th>\r\n                                    <th>Delete()</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.renderTableData()}\r\n                            </tbody>\r\n                        </table>\r\n                    \r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            \r\n            return (<>\r\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n                <div><h2>You need to sign in to access this page.</h2></div>\r\n                <div className=\"buttons-flex\"><button id=\"signIn-button\" onClick={() => this.signOutsetState()}>Sign in</button></div>\r\n                \r\n            </>)\r\n        }\r\n    }\r\n\r\n    renderTransactions() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        const history = createBrowserHistory();\r\n        history.push('/transactionsTable/' + username);   //changes address and bottom code changes the rendering\r\n        return (<>\r\n            {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n            <Transactions />\r\n        </>)\r\n    }\r\n    componentDidMount() {\r\n        \r\n        axios.get(\"http://localhost:8080/expense/allExpenses\")  // gets all expenses from mysql\r\n        .then(res => {\r\n\r\n            console.log(\"auth\",localStorage.getItem(\"auth\"))\r\n\r\n            const pathName = window.location.pathname;\r\n            const username = pathName.split('/')[2];\r\n\r\n            let userExpenses = (res.data).filter((expense) => {\r\n                if (expense.userName === username) {\r\n                    return expense;\r\n                }\r\n            })\r\n\r\n            // const expenses = res.data;\r\n            // console.log('axios expenses: ', expenses);\r\n            this.setState({expenses: userExpenses});\r\n\r\n            const today = new Date();\r\n            this.setState({selectedMonth: today.getMonth()+1, selectedYear: today.getFullYear()}, function () { //gets transactions for current month and year\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    this.setState({selectedTransactions: userTransactions}, function() {\r\n                        console.log(this.state.selectedTransactions)\r\n                    });\r\n\r\n                    \r\n                    let updatedSpentValsForAllExpenses = new Map(); // rename to better name\r\n                    this.state.expenses.map((expense) => {\r\n                        updatedSpentValsForAllExpenses.set(expense.id, 0.0);\r\n            \r\n                    });\r\n            \r\n                    this.setState({spentValsForAllExpenses: updatedSpentValsForAllExpenses});\r\n\r\n                    this.state.selectedTransactions.map((transaction) => {\r\n                        let tempMap = new Map(this.state.spentValsForAllExpenses);\r\n                        const expenseSpentVal = tempMap.get(transaction.expenseID)\r\n                        tempMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                        this.setState({spentValsForAllExpenses: tempMap})\r\n                    })\r\n\r\n                \r\n                    // let newMap = new Map(myHashMap);\r\n                    // console.log('newMap', newMap);\r\n\r\n                    // newMap.filter((expenseId){\r\n                    //     if (expenseId === transactions.expenseId)\r\n                    //     {\r\n                    //        newMap.set(expenseId, newMap.get(expenseId) + transaction.spentVal) \r\n                    //     }\r\n                    // });\r\n                })\r\n            });\r\n    \r\n            \r\n        })\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (<>\r\n            <div>\r\n                {this.state.showHome && this.renderHome()}\r\n                {this.state.showTransactions && this.renderTransactions()}\r\n                {this.state.showLogin && this.signOut()}\r\n                \r\n                \r\n            </div>\r\n            \r\n        </>)\r\n    }\r\n}","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\AddExpenseForm.js",["99","100"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\n\r\n\r\nconst AddExpenseForm = ({handleClose, show, submitHandler}) => {\r\n    \r\n    const class_placerholder = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (<>\r\n        <div className={class_placerholder}>\r\n            <div className='modal-main'>\r\n                <h2 className=\"black\">Add Expense: </h2>\r\n                <form onSubmit={submitHandler}>\r\n                    <label className=\"black\">Expense Name: \r\n                        <input required type=\"text\" name=\"expense\"  placeholder=\"Food\" />\r\n                    </label>\r\n                    <label className=\"black\">Monthly Budget: $ \r\n                        <input required type=\"number\" step=\"0.01\" pattern=\"^\\d*(\\.\\d{0,2})?$\" min=\"0\" name=\"budget\" placeholder=\"300.00\" />\r\n                    </label>\r\n                    <div className=\"buttons-flex\">\r\n                        <button type=\"submit\" onClick={handleClose} className=\"buttons-invariant\">Submit</button>\r\n                        <button type=\"button\" onClick={handleClose} className=\"buttons-invariant\">Close</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default AddExpenseForm","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\DeleteExpenseForm.js",["101","102","103"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\n\r\nimport Select from 'react-select'\r\n\r\n\r\nconst DeleteExpenseForm = ({show, handleClose, deleteConfirm, handleDeleteConfirm}) => {\r\n\r\n    const class_placerholder = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (\r\n          \r\n        <div className={class_placerholder}>\r\n                <div className='modal-main'>\r\n                \r\n                    \r\n                        \r\n                        <h1 className=\"black\">Confirm Deletion</h1>\r\n                        <h2 className=\"black\">Are you sure you want to delete this expense? </h2>\r\n\r\n                        <form onSubmit={handleDeleteConfirm(deleteConfirm)}>\r\n                            <div className=\"buttons-flex\">\r\n                                <button type=\"button\" onClick={handleClose}>Cancel</button>\r\n                                <button type=\"submit\" onClick={() => {handleClose()}}>Yes</button>\r\n                            </div>\r\n                        </form>\r\n                    \r\n                </div>\r\n             \r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default DeleteExpenseForm","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\EditExpenseForm.js",["104","105","106"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\n\r\nimport Select from 'react-select'\r\n\r\n\r\nconst EditExpenseForm = ({myList, handleClose, handleChange, show, submitHandler}) => {\r\n\r\n    const class_placerholder = show ? 'modal display-block' : 'modal display-none';\r\n    \r\n    return (\r\n          \r\n        <div className={class_placerholder}>\r\n                <div className='modal-main'>\r\n                    <h2 className=\"black\">Edit Expense: </h2>\r\n                    <div>\r\n                        <form onSubmit={submitHandler}>\r\n                            \r\n                            <label className=\"black\">Expense to be Changed:\r\n                                <select onChange={handleChange}>\r\n                                    {myList.map((element) => (\r\n                                        <option value={element.expense}>{element.expense}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </label>\r\n                            \r\n                            <label className=\"black\">New Expense Name: \r\n                                <input required type=\"text\" name=\" newExpense\"  placeholder=\"Food\" />\r\n                            </label>\r\n                            <label className=\"black\">New Monthly Budget: $ \r\n                                <input required type=\"number\" step=\"0.01\" pattern=\"^\\d*(\\.\\d{0,2})?$\" min=\"0\" name=\"newBudget\" placeholder=\"300.00\" />\r\n                            </label>\r\n                            <div className=\"buttons-flex\">\r\n                                <button type=\"submit\" onClick={handleClose} className=\"buttons-invariant\">Submit</button>\r\n                                <button type=\"button\" onClick={handleClose} className=\"buttons-invariant\">Close</button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n             \r\n        </div>\r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default EditExpenseForm","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\AddTransactionForm.js",["107","108"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\n\r\n\r\nconst AddTransactionForm = ({myList, handleClose, show, submitHandler, handleChange,}) => {\r\n    \r\n    const class_placerholder = show ? 'modal display-block' : 'modal display-none';\r\n\r\n    return (<>\r\n        <div className={class_placerholder}>\r\n            <div className='modal-main'>\r\n                <h2 className=\"black\">Add Transaction: </h2>\r\n                <form onSubmit={submitHandler}>\r\n                    \r\n                    <label className=\"black\">Expense Category:\r\n                        <select onChange={handleChange}>\r\n                            {myList.map((element) => (\r\n                                <option value={element.expense}>{element.expense}</option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n\r\n                    <label className=\"black\">Payee: \r\n                        <input required type=\"text\" name=\"payee\"  placeholder=\"Food\" />\r\n                    </label>\r\n                    <label className=\"black\">Spent: $ \r\n                        <input required type=\"number\" step=\"0.01\" pattern=\"^\\d*(\\.\\d{0,2})?$\" min=\"0\" name=\"spent\" placeholder=\"300.00\" />\r\n                    </label>\r\n                    <div className=\"buttons-flex\">\r\n                        <button type=\"submit\" onClick={handleClose} className=\"buttons-invariant\">Submit</button>\r\n                        <button type=\"button\" onClick={handleClose} className=\"buttons-invariant\">Close</button>\r\n                    </div>\r\n                    \r\n                </form>\r\n                \r\n            </div>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default AddTransactionForm","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Transactions.js",["109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport {Link} from \"react-router-dom\";\r\nimport { ThemeProvider } from 'react-bootstrap';\r\nimport Home from './Home';\r\nimport {createBrowserHistory} from \"history\";\r\nimport Login from './Login'\r\n\r\n\r\n\r\nexport default class Transactions extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTransactions: [],   //selected trans\r\n            allTransactions: [], //all transactions\r\n            allTransactionsForSelectedDate: [],\r\n            expenses: [],\r\n            listOfMonths: [{month:\"January\", monthNum: 1}, {month:\"February\", monthNum: 2}, {month:\"March\", monthNum: 3}, {month:\"April\", monthNum: 4}, {month:\"May\", monthNum: 5}, {month:\"June\", monthNum: 6}, {month:\"July\", monthNum: 7}, {month:\"August\", monthNum: 8}, {month:\"September\", monthNum: 9}, {month:\"October\", monthNum: 10}, {month:\"November\", monthNum: 11}, {month:\"December\", monthNum: 12}],\r\n            selectedMonth: -1,\r\n            selectedYear: -1,\r\n            \r\n            today: new Date(),\r\n\r\n            showTransactions: true,\r\n            showHome: false,\r\n            showLogin: false\r\n        };\r\n\r\n        this.handleSelectedMonthDropDownChange = this.handleSelectedMonthDropDownChange.bind(this);\r\n        this.handleSelectedYearDropDownChange = this.handleSelectedYearDropDownChange.bind(this);\r\n        this.handleSortByChange = this.handleSortByChange.bind(this);\r\n\r\n        this.renderTableData = this.renderTableData.bind(this);\r\n        this.renderTransactions = this.renderTransactions.bind(this);\r\n        this.renderHome = this.renderHome.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.changeLoginSetState = this.changeLoginSetState.bind(this);\r\n    }\r\n\r\n    handleSelectedMonthDropDownChange(e) {\r\n        \r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No month selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            {this.state.listOfMonths.map((element) => {\r\n                if (element.monthNum === parseInt(e.target.value)) {\r\n                    selectedElement = element.monthNum;\r\n                }\r\n            })}\r\n            this.setState({selectedMonth: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    \r\n                    let updatedMap = new Map(this.state.spentValsForAllExpenses);\r\n\r\n                    this.state.expenses.map((expense) => {\r\n                        updatedMap.set(expense.id, 0.0);\r\n                    })\r\n                    \r\n                    this.setState({selectedTransactions: userTransactions, spentValsForAllExpenses: userTransactions}, function(){\r\n                        let changingSpentMap = new Map(this.state.spentValsForAllExpenses);\r\n                        \r\n                        this.state.selectedTransactions.map((transaction) => {\r\n                            const expenseSpentVal = changingSpentMap.get(transaction.expenseID)\r\n                            changingSpentMap.set(transaction.expenseID, expenseSpentVal + transaction.spent);\r\n                \r\n                        })\r\n                        this.setState({spentValsForAllExpenses: changingSpentMap})\r\n                    })\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSelectedYearDropDownChange(e) {\r\n        \r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n\r\n        let selectedElement=0;\r\n        //console.log(e.target.value)\r\n        if (e.target.value === \"-1\") {\r\n            console.log(\"No Year selected.\")\r\n            return;\r\n        }\r\n        else{\r\n            selectedElement = e.target.value;\r\n            \r\n            this.setState({selectedYear: selectedElement}, function () {\r\n                axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    // console.log(\"newTransactionDate(YearChange): \" ,res.data);\r\n                    \r\n        \r\n                    // this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data}, function() {\r\n                        \r\n                        \r\n                    // });\r\n                    console.log(res.data);\r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    console.log(\"users transactions\", userTransactions)\r\n                    this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions}, function() {\r\n                        console.log(this.state.selectedTransactions)\r\n                    });\r\n                    \r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    handleSortByChange(e) {\r\n        \r\n        console.log(\"e.target.val\",e.target.value)\r\n        let selectionVal = -1; //temp var\r\n\r\n        this.state.expenses.map((element) => {\r\n                    if (element.id === parseInt(e.target.value)) {\r\n                        selectionVal = parseInt(element.id);\r\n                        console.log(\"myselectionVal: \",selectionVal)\r\n                    }\r\n        });\r\n\r\n        if (selectionVal === -1) {\r\n            this.setState({selectedTransactions: this.state.allTransactionsForSelectedDate})\r\n        }\r\n        else {\r\n            \r\n            \r\n            const updatedTransactions = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                \r\n                \r\n                if (transaction.expenseID === selectionVal) {\r\n                    return transaction;\r\n                }\r\n            })\r\n\r\n            this.setState({selectedTransactions: updatedTransactions})\r\n        }\r\n    }\r\n\r\n    submitHandlerDeleteTransaction(e) {\r\n        \r\n        console.log(e.target.value)\r\n        \r\n        //if (this.state.deleteConfirmVal) {\r\n            axios.delete('http://localhost:8080/transaction/deleteRow/' + e.target.value)\r\n            .then(response => {\r\n                const idOfDeletedTransaction = response.data;\r\n                \r\n                const updatedAllTransactions = this.state.allTransactions.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n                \r\n                const updatedallTransactionsForSelectedDate = this.state.allTransactionsForSelectedDate.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n\r\n                const updatedSelectedTransactions = this.state.selectedTransactions.filter((transaction) => {\r\n                    if (transaction.id !== idOfDeletedTransaction) {\r\n                        return transaction; // fix syntax\r\n                    }\r\n                });\r\n\r\n                this.setState({allTransaction: updatedAllTransactions, allTransactionsForSelectedDate: updatedallTransactionsForSelectedDate, selectedTransactions: updatedSelectedTransactions});\r\n                console.log(response)\r\n            }).catch(error => {\r\n                console.log(error)\r\n            }) \r\n            //window.location.reload();  \r\n        //}\r\n    }\r\n\r\n    renderTableData() {\r\n        return this.state.selectedTransactions.reverse().map((transaction) => {\r\n           let expenseName;\r\n           this.state.expenses.map((expense) => {\r\n               if (expense.id === transaction.expenseID) {\r\n                   expenseName = expense.expense;\r\n               }\r\n           })\r\n           return (\r\n              <tr>\r\n                 <td>{transaction.transactionDate}</td>\r\n                 <td>{expenseName}</td>\r\n                 <td>{transaction.payee}</td>\r\n                 <td>${(transaction.spent).toFixed(2)}</td>\r\n                 <td><button name=\"deleteButton\" value={transaction.id} onClick={(e) => {this.submitHandlerDeleteTransaction(e);}}>Delete</button></td>\r\n              </tr>\r\n           )\r\n        })\r\n        \r\n    }\r\n\r\n    renderLogin() {\r\n        \r\n        const history = createBrowserHistory();\r\n        history.push('/');   //changes address and bottom code changes the rendering\r\n            return (<>\r\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n                \r\n                <Login />\r\n            </>)\r\n    }\r\n    changeLoginSetState() {\r\n        this.setState({showLogin: true, showHome: false, showTransactions: false});\r\n    }\r\n\r\n    renderTransactions() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        if (localStorage.getItem(\"auth\") === \"authenticated\"){\r\n            return (\r\n                <div>\r\n                    <h1 className=\"mainTitle\">My Transactions</h1>\r\n                    <div>\r\n                        {/* <Link to=\"/\"> */}\r\n                            <button onClick={() => {this.setState({showHome: true, showTransactions: false})}}className=\"buttons-invariant\">Go Back</button>\r\n                        {/* </Link> */}\r\n                    </div>\r\n                    \r\n                    <div className=\"dropdown-flex\" id=\"dateDropDown\">\r\n                        <select value={this.state.selectedMonth} onChange={this.handleSelectedMonthDropDownChange}>\r\n                            <option disabled value=\"-1\">--Month--</option>\r\n                            {\r\n                            this.state.listOfMonths.map((element) => (\r\n                                <option value={element.monthNum}>{element.month}</option>\r\n                            ))}\r\n                        </select>\r\n                        <select onChange={this.handleSelectedYearDropDownChange}>\r\n                            <option disabled value=\"-1\">--Year--</option>\r\n                            <option value={this.state.today.getFullYear()-4}>{this.state.today.getFullYear()-4}</option>\r\n                            <option value={this.state.today.getFullYear()-3}>{this.state.today.getFullYear()-3}</option>\r\n                            <option value={this.state.today.getFullYear()-2}>{this.state.today.getFullYear()-2}</option>\r\n                            <option value={this.state.today.getFullYear()-1}>{this.state.today.getFullYear()-1}</option>\r\n                            <option selected value={this.state.today.getFullYear()}>{this.state.today.getFullYear()}</option>\r\n                        </select>\r\n                        <select onChange={this.handleSortByChange}>\r\n                                <option value=\"All\">--Filter/All--</option>\r\n                                {this.state.expenses.map((element) => (\r\n                                    <option value={element.id}>{element.expense}</option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    \r\n                    <table className=\"expense-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Date</th>\r\n                                <th>Category</th>\r\n                                <th>Payee</th>\r\n                                <th>Spent</th>\r\n                                <th>Delete()</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderTableData()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            \r\n            return (<>\r\n                {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n                <div><h2>You need to sign in to access this page.</h2></div>\r\n                <div className=\"buttons-flex\"><button id=\"signIn-button\" onClick={() => this.changeLoginSetState()}>Sign in</button></div>\r\n                \r\n            </>)\r\n        }\r\n    }\r\n\r\n    renderHome() {\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        const history = createBrowserHistory();\r\n        history.push('/home/' + username);   //changes address and bottom code changes the rendering\r\n        return (<>\r\n            {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n            <Home />\r\n        </>)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        \r\n        axios.get(\"http://localhost:8080/transaction/allTransactions\") //getting all transactions in db\r\n        .then(res => { \r\n            const transactions = res.data;\r\n            this.setState({allTransactions: transactions});\r\n        })\r\n\r\n        axios.get(\"http://localhost:8080/expense/allExpenses\")  //getting all expenses in db\r\n        .then(res => {\r\n\r\n            let userExpenses = (res.data).filter((expense) => {\r\n                if (expense.userName === username) {\r\n                    return expense;\r\n                }\r\n            })\r\n            this.setState({expenses: userExpenses}, function() {\r\n                console.log(\"User Expense\",this.state.expenses)\r\n            });\r\n            \r\n            \r\n        })\r\n        \r\n        const today = new Date();\r\n        this.setState({selectedMonth: today.getMonth()+1, selectedYear: today.getFullYear()}, function () {\r\n            axios.get(\"http://localhost:8080/transaction/selectedTransactions/\" + this.state.selectedMonth +\"/\"+ this.state.selectedYear)\r\n                .then(res => {\r\n                    console.log(res.data);\r\n                    \r\n                    \r\n                    \r\n\r\n                    let userTransactions = (res.data).filter((transaction) => {\r\n                        if (transaction.userName === username) {\r\n                            return transaction;\r\n                        }\r\n                    })\r\n                    console.log(\"users transactions\", userTransactions)\r\n                    this.setState({selectedTransactions: userTransactions, allTransactionsForSelectedDate: userTransactions}, function() {\r\n                        console.log(this.state.selectedTransactions)\r\n                    });\r\n                    \r\n                    //this.setState({selectedTransactions: res.data, allTransactionsForSelectedDate: res.data});\r\n                    console.log(\"selectedMOnth\", this.state.selectedMonth)\r\n                    console.log(\"selectedYear\", this.state.selectedYear)\r\n                })\r\n            \r\n        });\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        return(<>\r\n            <div>\r\n                {this.state.showTransactions && this.renderTransactions()}\r\n                {this.state.showHome && this.renderHome()}\r\n                {this.state.showLogin && this.renderLogin()}\r\n            </div>\r\n        </>)\r\n        \r\n    }\r\n}","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\NavBar.js",["127","128"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport Button from 'react-bootstrap/Button'\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nconst NavBar = () => {\r\n\r\n    return (<>\r\n        <div>\r\n            <Button>button</Button>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nexport default NavBar;","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Register.js",["129","130","131","132","133"],"import React, { useState } from 'react';\r\nimport axios from 'axios'\r\nimport './App.css'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { faWindowRestore } from '@fortawesome/free-solid-svg-icons';\r\nimport {createBrowserHistory} from \"history\";\r\nimport Login from './Login';\r\n//import 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\n\r\nexport default class Register extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users: [],\r\n            showLogin: false,\r\n            showRegister: true\r\n        }\r\n\r\n        this.submitUser = this.submitUser.bind(this);\r\n        this.renderLogin = this.renderLogin.bind(this);\r\n        this.changeLoginState = this.changeLoginState.bind(this);\r\n        this.renderRegister = this.renderRegister.bind(this);\r\n    }\r\n\r\n    submitUser = e => {\r\n        e.preventDefault();\r\n\r\n        let isUsernameTaken = false;\r\n        this.state.users.map(user => {\r\n            if (e.target[0].value === user.username) {\r\n                isUsernameTaken = true;\r\n            }\r\n        })\r\n        \r\n        if (isUsernameTaken === false) {\r\n            if (e.target[1].value === e.target[2].value) {\r\n                axios.post(\"http://localhost:8080/user/addRow\",{\r\n                    username: e.target[0].value,\r\n                    password: e.target[1].value\r\n                }).then(response => {\r\n                    console.log(\"status: \", \"user created\")\r\n                    console.log(\"Response:\", response)\r\n                    const  newUser = {\r\n                        id: response.data,\r\n                        username: e.target[0].value,\r\n                        password: e.target[1].value\r\n                    }\r\n\r\n                    this.setState({ users: [...this.state.users, newUser] }, function() {\r\n                        // console.log(\"username\", newUser.username);\r\n                        // console.log(\"pass\", newUser.password);\r\n                        // console.log(\"usersList\",this.state.users);\r\n                        e.target[0].value = '';\r\n                        e.target[1].value = '';\r\n                        e.target[2].value = '';\r\n                    })\r\n                    \r\n                }).catch(error => {\r\n                    console.log(error)\r\n                }) \r\n                \r\n                window.alert(\"User has been created!\") \r\n            }\r\n            else {\r\n                \r\n                e.target[1].value = '';\r\n                e.target[2].value = '';\r\n                \r\n                window.alert(\"Passwords do not match.Try again.\")\r\n            }\r\n        }\r\n        else {\r\n            window.alert(\"Username is taken. Try another.\")\r\n            e.target[0].value = '';\r\n            e.target[1].value = '';\r\n            e.target[2].value = '';\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"http://localhost:8080/user/allUsers\")\r\n        .then(res => {\r\n            this.setState({users: res.data}, function() {\r\n                console.log(this.state.users);\r\n            })\r\n            \r\n        })\r\n    }\r\n\r\n    changeLoginState() {\r\n        this.setState({showLogin: true, showRegister: false})\r\n    }\r\n    renderLogin() {\r\n        console.log(\"signed OUt\")\r\n        const pathName = window.location.pathname;\r\n        const username = pathName.split('/')[2];\r\n        localStorage.setItem(\"auth\", false);\r\n\r\n\r\n        const history = createBrowserHistory();\r\n        history.push('/');   //changes address and bottom code changes the rendering\r\n        return (<>\r\n            {/* <Link to={homePage}>{<Home username={this.state.username}/>}</Link> */}\r\n            <Login />\r\n        </>)\r\n    }\r\n\r\n    renderRegister() {\r\n        return (<>\r\n            <div className='modal-main'>\r\n                    <h1 className=\"mainTitle\" id='formText'>Register</h1>\r\n                    <form onSubmit={this.submitUser}>\r\n                        <label className=\"black\">Username: \r\n                        <div>\r\n                            <input id=\"registerInput\" required type=\"text\" name=\"expense\"  placeholder=\"Username_99\" />\r\n                        </div>\r\n                        </label>\r\n                        <label className=\"black\">Password:  \r\n                            <input name=\"password\" placeholder=\"Password123\" required type=\"password\"/>\r\n                        </label>\r\n                        <label className=\"black\">Confirm Password:  \r\n                            <input name=\"confirmPassword\" placeholder=\"Password123\" required type=\"password\" />\r\n                        </label>\r\n                        <div className=\"buttons-flex\">\r\n                            <button type=\"submit\" className=\"buttons-invariant\">Submit</button>\r\n                            <button type=\"button\" onClick={() => {this.changeLoginState()}}className=\"buttons-invariant\">to Login</button>\r\n                        </div>\r\n                        \r\n                    </form>\r\n                    \r\n                </div>\r\n        </>)\r\n    }\r\n\r\n    render() {\r\n        return(<>\r\n            <div>\r\n                {this.state.showRegister && this.renderRegister()}\r\n                {this.state.showLogin && this.renderLogin()}\r\n            </div>\r\n        </>)\r\n    }\r\n}","C:\\Users\\jason\\OneDrive\\desktop\\BudgetTracker\\react\\src\\Login.js",["134","135","136","137","138","139","140"],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":8,"nodeType":"147","messageId":"148","endLine":1,"endColumn":12},{"ruleId":"145","severity":1,"message":"149","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":16},{"ruleId":"145","severity":1,"message":"150","line":6,"column":39,"nodeType":"147","messageId":"148","endLine":6,"endColumn":43},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"152","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":25},{"ruleId":"145","severity":1,"message":"153","line":9,"column":8,"nodeType":"147","messageId":"148","endLine":9,"endColumn":14},{"ruleId":"145","severity":1,"message":"150","line":10,"column":9,"nodeType":"147","messageId":"148","endLine":10,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":82,"column":64,"nodeType":"156","messageId":"157","endLine":82,"endColumn":65},{"ruleId":"154","severity":1,"message":"155","line":82,"column":104,"nodeType":"156","messageId":"157","endLine":82,"endColumn":105},{"ruleId":"158","severity":1,"message":"159","line":121,"column":46,"nodeType":"160","messageId":"161","endLine":121,"endColumn":48},{"ruleId":"158","severity":1,"message":"162","line":149,"column":43,"nodeType":"160","messageId":"161","endLine":149,"endColumn":45},{"ruleId":"158","severity":1,"message":"162","line":157,"column":43,"nodeType":"160","messageId":"161","endLine":157,"endColumn":45},{"ruleId":"158","severity":1,"message":"163","line":192,"column":78,"nodeType":"160","messageId":"164","endLine":192,"endColumn":80},{"ruleId":"158","severity":1,"message":"163","line":206,"column":98,"nodeType":"160","messageId":"164","endLine":206,"endColumn":100},{"ruleId":"165","severity":1,"message":"166","line":256,"column":9,"nodeType":"167","messageId":"168","endLine":265,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":256,"column":44,"nodeType":"160","messageId":"161","endLine":256,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":268,"column":9,"nodeType":"167","messageId":"168","endLine":272,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":268,"column":44,"nodeType":"160","messageId":"161","endLine":268,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":279,"column":9,"nodeType":"167","messageId":"168","endLine":283,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":279,"column":44,"nodeType":"160","messageId":"161","endLine":279,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":289,"column":9,"nodeType":"167","messageId":"168","endLine":298,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":289,"column":44,"nodeType":"160","messageId":"161","endLine":289,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":301,"column":9,"nodeType":"167","messageId":"168","endLine":305,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":301,"column":44,"nodeType":"160","messageId":"161","endLine":301,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":311,"column":9,"nodeType":"167","messageId":"168","endLine":315,"endColumn":12},{"ruleId":"158","severity":1,"message":"162","line":311,"column":44,"nodeType":"160","messageId":"161","endLine":311,"endColumn":46},{"ruleId":"165","severity":1,"message":"166","line":327,"column":13,"nodeType":"167","messageId":"168","endLine":331,"endColumn":16},{"ruleId":"158","severity":1,"message":"162","line":327,"column":52,"nodeType":"160","messageId":"161","endLine":327,"endColumn":54},{"ruleId":"158","severity":1,"message":"162","line":339,"column":55,"nodeType":"160","messageId":"161","endLine":339,"endColumn":57},{"ruleId":"158","severity":1,"message":"162","line":346,"column":75,"nodeType":"160","messageId":"161","endLine":346,"endColumn":77},{"ruleId":"158","severity":1,"message":"162","line":375,"column":55,"nodeType":"160","messageId":"161","endLine":375,"endColumn":57},{"ruleId":"158","severity":1,"message":"162","line":383,"column":75,"nodeType":"160","messageId":"161","endLine":383,"endColumn":77},{"ruleId":"145","severity":1,"message":"169","line":431,"column":15,"nodeType":"147","messageId":"148","endLine":431,"endColumn":23},{"ruleId":"158","severity":1,"message":"163","line":544,"column":60,"nodeType":"160","messageId":"164","endLine":544,"endColumn":62},{"ruleId":"158","severity":1,"message":"163","line":559,"column":76,"nodeType":"160","messageId":"164","endLine":559,"endColumn":78},{"ruleId":"158","severity":1,"message":"162","line":570,"column":55,"nodeType":"160","messageId":"161","endLine":570,"endColumn":57},{"ruleId":"158","severity":1,"message":"162","line":577,"column":71,"nodeType":"160","messageId":"161","endLine":577,"endColumn":73},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"170","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"170","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"171","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":14},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"170","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"171","line":5,"column":8,"nodeType":"147","messageId":"148","endLine":5,"endColumn":14},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"170","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"150","line":4,"column":9,"nodeType":"147","messageId":"148","endLine":4,"endColumn":13},{"ruleId":"145","severity":1,"message":"172","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":23},{"ruleId":"165","severity":1,"message":"166","line":54,"column":13,"nodeType":"167","messageId":"168","endLine":58,"endColumn":16},{"ruleId":"158","severity":1,"message":"162","line":54,"column":52,"nodeType":"160","messageId":"161","endLine":54,"endColumn":54},{"ruleId":"158","severity":1,"message":"163","line":64,"column":76,"nodeType":"160","messageId":"164","endLine":64,"endColumn":78},{"ruleId":"158","severity":1,"message":"162","line":72,"column":55,"nodeType":"160","messageId":"161","endLine":72,"endColumn":57},{"ruleId":"158","severity":1,"message":"162","line":79,"column":75,"nodeType":"160","messageId":"161","endLine":79,"endColumn":77},{"ruleId":"158","severity":1,"message":"163","line":117,"column":76,"nodeType":"160","messageId":"164","endLine":117,"endColumn":78},{"ruleId":"158","severity":1,"message":"162","line":137,"column":43,"nodeType":"160","messageId":"161","endLine":137,"endColumn":45},{"ruleId":"158","severity":1,"message":"163","line":150,"column":104,"nodeType":"160","messageId":"164","endLine":150,"endColumn":106},{"ruleId":"158","severity":1,"message":"163","line":171,"column":96,"nodeType":"160","messageId":"164","endLine":171,"endColumn":98},{"ruleId":"158","severity":1,"message":"163","line":177,"column":126,"nodeType":"160","messageId":"164","endLine":177,"endColumn":128},{"ruleId":"158","severity":1,"message":"163","line":183,"column":106,"nodeType":"160","messageId":"164","endLine":183,"endColumn":108},{"ruleId":"158","severity":1,"message":"162","line":201,"column":46,"nodeType":"160","messageId":"161","endLine":201,"endColumn":48},{"ruleId":"145","severity":1,"message":"169","line":235,"column":15,"nodeType":"147","messageId":"148","endLine":235,"endColumn":23},{"ruleId":"158","severity":1,"message":"163","line":326,"column":60,"nodeType":"160","messageId":"164","endLine":326,"endColumn":62},{"ruleId":"158","severity":1,"message":"163","line":347,"column":76,"nodeType":"160","messageId":"164","endLine":347,"endColumn":78},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"170","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":13},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"173","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"174","line":5,"column":10,"nodeType":"147","messageId":"148","endLine":5,"endColumn":25},{"ruleId":"158","severity":1,"message":"162","line":30,"column":35,"nodeType":"160","messageId":"161","endLine":30,"endColumn":37},{"ruleId":"145","severity":1,"message":"169","line":97,"column":15,"nodeType":"147","messageId":"148","endLine":97,"endColumn":23},{"ruleId":"145","severity":1,"message":"151","line":1,"column":17,"nodeType":"147","messageId":"148","endLine":1,"endColumn":25},{"ruleId":"145","severity":1,"message":"173","line":4,"column":8,"nodeType":"147","messageId":"148","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"150","line":6,"column":9,"nodeType":"147","messageId":"148","endLine":6,"endColumn":13},{"ruleId":"145","severity":1,"message":"175","line":6,"column":15,"nodeType":"147","messageId":"148","endLine":6,"endColumn":20},{"ruleId":"145","severity":1,"message":"176","line":6,"column":22,"nodeType":"147","messageId":"148","endLine":6,"endColumn":28},{"ruleId":"158","severity":1,"message":"162","line":37,"column":37,"nodeType":"160","messageId":"161","endLine":37,"endColumn":39},{"ruleId":"145","severity":1,"message":"177","line":47,"column":19,"nodeType":"147","messageId":"148","endLine":47,"endColumn":27},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'DeleteExpenseForm' is defined but never used.","'NavBar' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a return value from arrow function.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'username' is assigned a value but never used.","'axios' is defined but never used.","'Select' is defined but never used.","'ThemeProvider' is defined but never used.","'Button' is defined but never used.","'faWindowRestore' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'homePage' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]